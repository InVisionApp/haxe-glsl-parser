State 0:
          root ::= * translation_unit
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype scope_push compound_statement_no_new_scope scope_pop
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
        PREPROCESSOR_DIRECTIVE shift  190
                          root accept
              translation_unit shift  35
                   declaration shift  180
            function_prototype shift  73
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
        preprocessor_directive shift  179
          external_declaration shift  178
           function_definition shift  181

State 1:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement ::= * scope_push compound_statement_no_new_scope scope_pop
          statement ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= LEFT_BRACE * RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE * statement_list RIGHT_BRACE
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE
    (213) scope_push ::= *

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                   RIGHT_BRACE shift  207
                            IF shift  130
                         WHILE shift  78
                            DO shift  66
                           FOR shift  76
                      CONTINUE shift  119
                         BREAK shift  118
                        RETURN shift  10
                       DISCARD shift  117
        PREPROCESSOR_DIRECTIVE shift  190
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  213
                     statement shift  184
                    scope_push shift  70
              simple_statement shift  214
          expression_statement shift  212
           selection_statement shift  211
           iteration_statement shift  210
                jump_statement shift  209
        preprocessor_directive shift  208
                statement_list shift  4
                     {default} reduce 213

State 2:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN * statement_no_new_scope scope_pop
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                    LEFT_BRACE shift  1
                            IF shift  130
                         WHILE shift  78
                            DO shift  66
                           FOR shift  76
                      CONTINUE shift  119
                         BREAK shift  118
                        RETURN shift  10
                       DISCARD shift  117
        PREPROCESSOR_DIRECTIVE shift  190
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  213
compound_statement_no_new_scope shift  200
              simple_statement shift  199
        statement_no_new_scope shift  75
          expression_statement shift  212
           selection_statement shift  211
           iteration_statement shift  210
                jump_statement shift  209
        preprocessor_directive shift  208

State 3:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= WHILE scope_push LEFT_PAREN condition RIGHT_PAREN * statement_no_new_scope scope_pop
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                    LEFT_BRACE shift  1
                            IF shift  130
                         WHILE shift  78
                            DO shift  66
                           FOR shift  76
                      CONTINUE shift  119
                         BREAK shift  118
                        RETURN shift  10
                       DISCARD shift  117
        PREPROCESSOR_DIRECTIVE shift  190
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  213
compound_statement_no_new_scope shift  200
              simple_statement shift  199
        statement_no_new_scope shift  77
          expression_statement shift  212
           selection_statement shift  211
           iteration_statement shift  210
                jump_statement shift  209
        preprocessor_directive shift  208

State 4:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement ::= * scope_push compound_statement_no_new_scope scope_pop
          statement ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= LEFT_BRACE statement_list * RIGHT_BRACE
          statement_list ::= statement_list * statement
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE
    (213) scope_push ::= *

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                   RIGHT_BRACE shift  206
                            IF shift  130
                         WHILE shift  78
                            DO shift  66
                           FOR shift  76
                      CONTINUE shift  119
                         BREAK shift  118
                        RETURN shift  10
                       DISCARD shift  117
        PREPROCESSOR_DIRECTIVE shift  190
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  213
                     statement shift  205
                    scope_push shift  70
              simple_statement shift  214
          expression_statement shift  212
           selection_statement shift  211
           iteration_statement shift  210
                jump_statement shift  209
        preprocessor_directive shift  208
                     {default} reduce 213

State 5:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_with_scope ::= scope_push * compound_statement_no_new_scope scope_pop
          statement_with_scope ::= scope_push * simple_statement scope_pop
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                    LEFT_BRACE shift  1
                            IF shift  130
                         WHILE shift  78
                            DO shift  66
                           FOR shift  76
                      CONTINUE shift  119
                         BREAK shift  118
                        RETURN shift  10
                       DISCARD shift  117
        PREPROCESSOR_DIRECTIVE shift  190
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  213
compound_statement_no_new_scope shift  80
              simple_statement shift  79
          expression_statement shift  212
           selection_statement shift  211
           iteration_statement shift  210
                jump_statement shift  209
        preprocessor_directive shift  208

State 6:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          iteration_statement ::= FOR scope_push LEFT_PAREN * for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          for_init_statement ::= * expression_statement
          for_init_statement ::= * declaration_statement

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  204
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   declaration shift  216
            function_prototype shift  145
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
         declaration_statement shift  187
          expression_statement shift  188
            for_init_statement shift  7

State 7:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= FOR scope_push LEFT_PAREN for_init_statement * for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
          conditionopt ::= * condition
    (198) conditionopt ::= *
          for_rest_statement ::= * conditionopt SEMICOLON
          for_rest_statement ::= * conditionopt SEMICOLON expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     INVARIANT shift  134
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  128
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
          fully_specified_type shift  127
                type_specifier shift  218
                type_qualifier shift  58
              struct_specifier shift  255
                     condition shift  189
            for_rest_statement shift  120
                  conditionopt shift  116
                     {default} reduce 198

State 8:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= WHILE scope_push LEFT_PAREN * condition RIGHT_PAREN statement_no_new_scope scope_pop

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  273
                         FLOAT shift  161
                           INT shift  160
                          BOOL shift  159
                          VEC2 shift  158
                          VEC3 shift  157
                          VEC4 shift  156
                         BVEC2 shift  155
                         BVEC3 shift  154
                         BVEC4 shift  153
                         IVEC2 shift  152
                         IVEC3 shift  151
                         IVEC4 shift  150
                          MAT2 shift  149
                          MAT3 shift  148
                          MAT4 shift  147
                     TYPE_NAME shift  146
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     INVARIANT shift  134
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  128
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
          fully_specified_type shift  127
                type_specifier shift  218
                type_qualifier shift  58
              struct_specifier shift  255
                     condition shift  125

State 9:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression LEFT_BRACKET * integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          integer_expression ::= * expression
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  175
            postfix_expression shift  85
            integer_expression shift  176
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 10:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= RETURN * SEMICOLON
          jump_statement ::= RETURN * expression SEMICOLON

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
                     SEMICOLON shift  192
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  90
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 11:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
    (199) for_rest_statement ::= conditionopt SEMICOLON *
          for_rest_statement ::= conditionopt SEMICOLON * expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  115
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                     {default} reduce 199

State 12:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN * expression RIGHT_PAREN SEMICOLON

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  91
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 13:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          condition ::= fully_specified_type IDENTIFIER EQUAL * initializer

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  275
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   initializer shift  201

State 14:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN * expression RIGHT_PAREN selection_rest_statement

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  92
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 15:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          single_declaration ::= fully_specified_type IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  275
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   initializer shift  221

State 16:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  275
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                   initializer shift  276

State 17:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION * expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  100
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 18:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          primary_expression ::= LEFT_PAREN * expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
                    expression shift  113
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  298
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 19:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= function_call_header * VOID
          function_call_header_no_parameters ::= * function_call_header
     (18) function_call_header_no_parameters ::= function_call_header *
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= function_call_header * assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                          VOID shift  331
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  330
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299
                     {default} reduce 18

State 20:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  278
           constant_expression shift  131

State 21:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_type_specifier ::= type_specifier LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  278
           constant_expression shift  135

State 22:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  278
           constant_expression shift  136

State 23:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          struct_declarator ::= IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  278
           constant_expression shift  139

State 24:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  278
           constant_expression shift  143

State 25:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION expression COLON * assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  300
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 26:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  297
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 27:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header_with_parameters ::= function_call_header_with_parameters COMMA * assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  285
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 28:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
         assignment_expression shift  281
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  67
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  165
         logical_or_expression shift  101
        conditional_expression shift  299

State 29:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= logical_or_expression OR_OP * logical_xor_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  167
        logical_xor_expression shift  163

State 30:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= logical_xor_expression XOR_OP * logical_and_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  169
        logical_and_expression shift  164

State 31:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= logical_and_expression AND_OP * inclusive_or_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  171
       inclusive_or_expression shift  166

State 32:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR * exclusive_or_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  172
       exclusive_or_expression shift  168

State 33:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= exclusive_or_expression CARET * and_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  170

State 34:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= and_expression AMPERSAND * equality_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  102

State 35:
      (0) root ::= translation_unit *
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype scope_push compound_statement_no_new_scope scope_pop
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                             $ reduce 0
                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     PRECISION shift  69
                     INVARIANT shift  93
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
        PREPROCESSOR_DIRECTIVE shift  190
                   declaration shift  180
            function_prototype shift  73
          init_declarator_list shift  98
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
           function_declarator shift  138
               function_header shift  59
function_header_with_parameters shift  133
          fully_specified_type shift  132
                type_specifier shift  218
                type_qualifier shift  58
            single_declaration shift  220
              struct_specifier shift  255
        preprocessor_directive shift  179
          external_declaration shift  182
           function_definition shift  181

State 36:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression NE_OP * relational_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  82

State 37:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression EQ_OP * relational_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  83

State 38:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression GE_OP * shift_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  104

State 39:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LE_OP * shift_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  105

State 40:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression RIGHT_ANGLE * shift_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  106

State 41:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LEFT_ANGLE * shift_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  107

State 42:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression RIGHT_OP * additive_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  108

State 43:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression LEFT_OP * additive_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  89
           additive_expression shift  109

State 44:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression DASH * multiplicative_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  87

State 45:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression PLUS * multiplicative_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  301
                unary_operator shift  49
     multiplicative_expression shift  88

State 46:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression PERCENT * unary_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  302
                unary_operator shift  49

State 47:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression SLASH * unary_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  303
                unary_operator shift  49

State 48:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression STAR * unary_expression

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  304
                unary_operator shift  49

State 49:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_expression ::= unary_operator * unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  309
                unary_operator shift  49

State 50:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  310
                unary_operator shift  49

State 51:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  177
                   INTCONSTANT shift  341
                 FLOATCONSTANT shift  340
                  BOOLCONSTANT shift  339
                    LEFT_PAREN shift  18
                        INC_OP shift  51
                        DEC_OP shift  50
                         FLOAT shift  327
                           INT shift  326
                          BOOL shift  325
                          VEC2 shift  324
                          VEC3 shift  323
                          VEC4 shift  322
                         BVEC2 shift  321
                         BVEC3 shift  320
                         BVEC4 shift  319
                         IVEC2 shift  318
                         IVEC3 shift  317
                         IVEC4 shift  316
                          MAT2 shift  315
                          MAT3 shift  314
                          MAT4 shift  313
                     TYPE_NAME shift  312
                          PLUS shift  308
                          DASH shift  307
                          BANG shift  306
                         TILDE shift  305
           variable_identifier shift  342
            primary_expression shift  337
            postfix_expression shift  85
                 function_call shift  335
         function_call_generic shift  334
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  174
          function_call_header shift  19
           function_identifier shift  173
        constructor_identifier shift  328
              unary_expression shift  311
                unary_operator shift  49

State 52:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= parameter_qualifier * parameter_declarator
          parameter_declaration ::= parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
          parameter_declarator shift  231
                type_specifier shift  94
      parameter_type_specifier shift  230
              struct_specifier shift  255

State 53:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_declarator
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
          parameter_declarator shift  236
                type_specifier shift  94
      parameter_type_specifier shift  235
              struct_specifier shift  255

State 54:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
                type_specifier shift  64
              struct_specifier shift  255
       struct_declaration_list shift  56
            struct_declaration shift  242

State 55:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
                type_specifier shift  64
              struct_specifier shift  255
       struct_declaration_list shift  57
            struct_declaration shift  242

State 56:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                   RIGHT_BRACE shift  241
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
                type_specifier shift  64
              struct_specifier shift  255
            struct_declaration shift  247

State 57:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
                   RIGHT_BRACE shift  248
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
                type_specifier shift  64
              struct_specifier shift  255
            struct_declaration shift  247

State 58:
          fully_specified_type ::= type_qualifier * type_specifier
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
                        STRUCT shift  96
           precision_qualifier shift  62
        type_specifier_no_prec shift  253
                type_specifier shift  217
              struct_specifier shift  255

State 59:
    (100) function_declarator ::= function_header *
          function_header_with_parameters ::= function_header * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                   RIGHT_PAREN reduce 100
                            IN shift  234
                           OUT shift  233
                         INOUT shift  232
                     INVARIANT shift  134
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
         parameter_declaration shift  239
                type_qualifier shift  68
           parameter_qualifier shift  52
                     {default} reduce 111

State 60:
          function_header_with_parameters ::= function_header_with_parameters COMMA * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                            IN shift  234
                           OUT shift  233
                         INOUT shift  232
                     INVARIANT shift  134
                         CONST shift  229
                     ATTRIBUTE shift  228
                       VARYING shift  227
                       UNIFORM shift  225
         parameter_declaration shift  224
                type_qualifier shift  68
           parameter_qualifier shift  52
                     {default} reduce 111

State 61:
          statement_with_scope ::= * scope_push compound_statement_no_new_scope scope_pop
          statement_with_scope ::= * scope_push simple_statement scope_pop
          selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN * selection_rest_statement
          selection_rest_statement ::= * statement_with_scope ELSE statement_with_scope
          selection_rest_statement ::= * statement_with_scope
    (213) scope_push ::= *

                    scope_push shift  5
          statement_with_scope shift  114
      selection_rest_statement shift  186
                     {default} reduce 213

State 62:
          type_specifier ::= precision_qualifier * type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                        STRUCT shift  96
        type_specifier_no_prec shift  252
              struct_specifier shift  255

State 63:
          declaration ::= PRECISION precision_qualifier * type_specifier_no_prec SEMICOLON
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  273
                         FLOAT shift  272
                           INT shift  271
                          BOOL shift  270
                          VEC2 shift  269
                          VEC3 shift  268
                          VEC4 shift  267
                         BVEC2 shift  266
                         BVEC3 shift  265
                         BVEC4 shift  264
                         IVEC2 shift  263
                         IVEC3 shift  262
                         IVEC4 shift  261
                          MAT2 shift  260
                          MAT3 shift  259
                          MAT4 shift  258
                     TYPE_NAME shift  254
                     SAMPLER2D shift  257
                   SAMPLERCUBE shift  256
                        STRUCT shift  96
        type_specifier_no_prec shift  142
              struct_specifier shift  255

State 64:
          struct_declaration ::= type_specifier * struct_declarator_list SEMICOLON
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  140
        struct_declarator_list shift  95
             struct_declarator shift  243

State 65:
          statement_with_scope ::= * scope_push compound_statement_no_new_scope scope_pop
          statement_with_scope ::= * scope_push simple_statement scope_pop
          selection_rest_statement ::= statement_with_scope ELSE * statement_with_scope
    (213) scope_push ::= *

                    scope_push shift  5
          statement_with_scope shift  185
                     {default} reduce 213

State 66:
          statement_with_scope ::= * scope_push compound_statement_no_new_scope scope_pop
          statement_with_scope ::= * scope_push simple_statement scope_pop
          iteration_statement ::= DO * statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
    (213) scope_push ::= *

                    scope_push shift  5
          statement_with_scope shift  124
                     {default} reduce 213

State 67:
     (48) multiplicative_expression ::= unary_expression *
          assignment_expression ::= unary_expression * assignment_operator assignment_expression
          assignment_operator ::= * EQUAL
          assignment_operator ::= * MUL_ASSIGN
          assignment_operator ::= * DIV_ASSIGN
          assignment_operator ::= * MOD_ASSIGN
          assignment_operator ::= * ADD_ASSIGN
          assignment_operator ::= * SUB_ASSIGN
          assignment_operator ::= * LEFT_ASSIGN
          assignment_operator ::= * RIGHT_ASSIGN
          assignment_operator ::= * AND_ASSIGN
          assignment_operator ::= * XOR_ASSIGN
          assignment_operator ::= * OR_ASSIGN

                         EQUAL shift  296
                    MUL_ASSIGN shift  295
                    DIV_ASSIGN shift  294
                    MOD_ASSIGN shift  293
                    ADD_ASSIGN shift  292
                    SUB_ASSIGN shift  291
                   LEFT_ASSIGN shift  290
                  RIGHT_ASSIGN shift  289
                    AND_ASSIGN shift  288
                    XOR_ASSIGN shift  287
                     OR_ASSIGN shift  286
           assignment_operator shift  26
                     {default} reduce 48

State 68:
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_declarator
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT

                            IN shift  234
                           OUT shift  233
                         INOUT shift  232
           parameter_qualifier shift  53
                     {default} reduce 111

State 69:
          declaration ::= PRECISION * precision_qualifier type_specifier_no_prec SEMICOLON
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION

                HIGH_PRECISION shift  251
              MEDIUM_PRECISION shift  250
                 LOW_PRECISION shift  249
           precision_qualifier shift  63

State 70:
          statement ::= scope_push * compound_statement_no_new_scope scope_pop
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE

                    LEFT_BRACE shift  1
compound_statement_no_new_scope shift  81

State 71:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  140
             struct_declarator shift  245

State 72:
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          function_definition ::= function_prototype scope_push * compound_statement_no_new_scope scope_pop

                    LEFT_BRACE shift  1
compound_statement_no_new_scope shift  74

State 73:
          declaration ::= function_prototype * SEMICOLON
          function_definition ::= function_prototype * scope_push compound_statement_no_new_scope scope_pop
    (213) scope_push ::= *

                     SEMICOLON shift  343
                    scope_push shift  72
                     {default} reduce 213

State 74:
          function_definition ::= function_prototype scope_push compound_statement_no_new_scope * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  183
                     {default} reduce 214

State 75:
          iteration_statement ::= FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  196
                     {default} reduce 214

State 76:
          iteration_statement ::= FOR * scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop
    (213) scope_push ::= *

                    scope_push shift  121
                     {default} reduce 213

State 77:
          iteration_statement ::= WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  198
                     {default} reduce 214

State 78:
          iteration_statement ::= WHILE * scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop
    (213) scope_push ::= *

                    scope_push shift  129
                     {default} reduce 213

State 79:
          statement_with_scope ::= scope_push simple_statement * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  202
                     {default} reduce 214

State 80:
          statement_with_scope ::= scope_push compound_statement_no_new_scope * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  203
                     {default} reduce 214

State 81:
          statement ::= scope_push compound_statement_no_new_scope * scope_pop
    (214) scope_pop ::= *

                     scope_pop shift  215
                     {default} reduce 214

State 82:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (65) equality_expression ::= equality_expression NE_OP relational_expression *

                    LEFT_ANGLE shift  41
                   RIGHT_ANGLE shift  40
                         LE_OP shift  39
                         GE_OP shift  38
                     {default} reduce 65

State 83:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (64) equality_expression ::= equality_expression EQ_OP relational_expression *

                    LEFT_ANGLE shift  41
                   RIGHT_ANGLE shift  40
                         LE_OP shift  39
                         GE_OP shift  38
                     {default} reduce 64

State 84:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (63) equality_expression ::= relational_expression *

                    LEFT_ANGLE shift  41
                   RIGHT_ANGLE shift  40
                         LE_OP shift  39
                         GE_OP shift  38
                     {default} reduce 63

State 85:
          postfix_expression ::= postfix_expression * LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression * DOT FIELD_SELECTION
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
     (40) unary_expression ::= postfix_expression *

                  LEFT_BRACKET shift  9
                           DOT shift  162
                        INC_OP shift  283
                        DEC_OP shift  282
                     {default} reduce 40

State 86:
          function_header ::= fully_specified_type IDENTIFIER * LEFT_PAREN
    (122) single_declaration ::= fully_specified_type IDENTIFIER *
          single_declaration ::= fully_specified_type IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type IDENTIFIER * EQUAL initializer

                    LEFT_PAREN shift  223
                  LEFT_BRACKET shift  20
                         EQUAL shift  15
                     {default} reduce 122

State 87:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (54) additive_expression ::= additive_expression DASH multiplicative_expression *

                          STAR shift  48
                         SLASH shift  47
                       PERCENT shift  46
                     {default} reduce 54

State 88:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (53) additive_expression ::= additive_expression PLUS multiplicative_expression *

                          STAR shift  48
                         SLASH shift  47
                       PERCENT shift  46
                     {default} reduce 53

State 89:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (52) additive_expression ::= multiplicative_expression *

                          STAR shift  48
                         SLASH shift  47
                       PERCENT shift  46
                     {default} reduce 52

State 90:
          expression ::= expression * COMMA assignment_expression
          jump_statement ::= RETURN expression * SEMICOLON

                         COMMA shift  28
                     SEMICOLON shift  193

State 91:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression * RIGHT_PAREN SEMICOLON

                   RIGHT_PAREN shift  122
                         COMMA shift  28

State 92:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN expression * RIGHT_PAREN selection_rest_statement

                   RIGHT_PAREN shift  61
                         COMMA shift  28

State 93:
          single_declaration ::= INVARIANT * IDENTIFIER
          type_qualifier ::= INVARIANT * VARYING

                    IDENTIFIER shift  219
                       VARYING shift  226

State 94:
          parameter_declarator ::= type_specifier * IDENTIFIER
          parameter_declarator ::= type_specifier * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
    (115) parameter_type_specifier ::= type_specifier *
          parameter_type_specifier ::= type_specifier * LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  137
                  LEFT_BRACKET shift  21
                     {default} reduce 115

State 95:
          struct_declaration ::= type_specifier struct_declarator_list * SEMICOLON
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                         COMMA shift  71
                     SEMICOLON shift  246

State 96:
          struct_specifier ::= STRUCT * IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    IDENTIFIER shift  141
                    LEFT_BRACE shift  54

State 97:
    (118) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER *
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * EQUAL initializer

                  LEFT_BRACKET shift  24
                         EQUAL shift  16
                     {default} reduce 118

State 98:
          declaration ::= init_declarator_list * SEMICOLON
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER EQUAL initializer

                         COMMA shift  144
                     SEMICOLON shift  279

State 99:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMICOLON

                         COMMA shift  28
                     SEMICOLON shift  280

State 100:
          conditional_expression ::= logical_or_expression QUESTION expression * COLON assignment_expression
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  28
                         COLON shift  25

State 101:
          logical_or_expression ::= logical_or_expression * OR_OP logical_xor_expression
     (78) conditional_expression ::= logical_or_expression *
          conditional_expression ::= logical_or_expression * QUESTION expression COLON assignment_expression

                         OR_OP shift  29
                      QUESTION shift  17
                     {default} reduce 78

State 102:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (67) and_expression ::= and_expression AMPERSAND equality_expression *

                         EQ_OP shift  37
                         NE_OP shift  36
                     {default} reduce 67

State 103:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (66) and_expression ::= equality_expression *

                         EQ_OP shift  37
                         NE_OP shift  36
                     {default} reduce 66

State 104:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (62) relational_expression ::= relational_expression GE_OP shift_expression *

                       LEFT_OP shift  43
                      RIGHT_OP shift  42
                     {default} reduce 62

State 105:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (61) relational_expression ::= relational_expression LE_OP shift_expression *

                       LEFT_OP shift  43
                      RIGHT_OP shift  42
                     {default} reduce 61

State 106:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (60) relational_expression ::= relational_expression RIGHT_ANGLE shift_expression *

                       LEFT_OP shift  43
                      RIGHT_OP shift  42
                     {default} reduce 60

State 107:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (59) relational_expression ::= relational_expression LEFT_ANGLE shift_expression *

                       LEFT_OP shift  43
                      RIGHT_OP shift  42
                     {default} reduce 59

State 108:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (57) shift_expression ::= shift_expression RIGHT_OP additive_expression *

                          PLUS shift  45
                          DASH shift  44
                     {default} reduce 57

State 109:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (56) shift_expression ::= shift_expression LEFT_OP additive_expression *

                          PLUS shift  45
                          DASH shift  44
                     {default} reduce 56

State 110:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (58) relational_expression ::= shift_expression *

                       LEFT_OP shift  43
                      RIGHT_OP shift  42
                     {default} reduce 58

State 111:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (55) shift_expression ::= additive_expression *

                          PLUS shift  45
                          DASH shift  44
                     {default} reduce 55

State 112:
          function_call_generic ::= function_call_header_with_parameters * RIGHT_PAREN
          function_call_header_with_parameters ::= function_call_header_with_parameters * COMMA assignment_expression

                   RIGHT_PAREN shift  333
                         COMMA shift  27

State 113:
          primary_expression ::= LEFT_PAREN expression * RIGHT_PAREN
          expression ::= expression * COMMA assignment_expression

                   RIGHT_PAREN shift  338
                         COMMA shift  28

State 114:
          selection_rest_statement ::= statement_with_scope * ELSE statement_with_scope
    (189) selection_rest_statement ::= statement_with_scope *

                          ELSE shift  65
                          ELSE reduce 189 ** Parsing conflict **
                     {default} reduce 189

State 115:
          expression ::= expression * COMMA assignment_expression
    (200) for_rest_statement ::= conditionopt SEMICOLON expression *

                         COMMA shift  28
                     {default} reduce 200

State 116:
          for_rest_statement ::= conditionopt * SEMICOLON
          for_rest_statement ::= conditionopt * SEMICOLON expression

                     SEMICOLON shift  11

State 117:
          jump_statement ::= DISCARD * SEMICOLON

                     SEMICOLON shift  191

State 118:
          jump_statement ::= BREAK * SEMICOLON

                     SEMICOLON shift  194

State 119:
          jump_statement ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  195

State 120:
          iteration_statement ::= FOR scope_push LEFT_PAREN for_init_statement for_rest_statement * RIGHT_PAREN statement_no_new_scope scope_pop

                   RIGHT_PAREN shift  2

State 121:
          iteration_statement ::= FOR scope_push * LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop

                    LEFT_PAREN shift  6

State 122:
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN * SEMICOLON

                     SEMICOLON shift  197

State 123:
          iteration_statement ::= DO statement_with_scope WHILE * LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                    LEFT_PAREN shift  12

State 124:
          iteration_statement ::= DO statement_with_scope * WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                         WHILE shift  123

State 125:
          iteration_statement ::= WHILE scope_push LEFT_PAREN condition * RIGHT_PAREN statement_no_new_scope scope_pop

                   RIGHT_PAREN shift  3

State 126:
          condition ::= fully_specified_type IDENTIFIER * EQUAL initializer

                         EQUAL shift  13

State 127:
          condition ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  126

State 128:
          expression ::= expression * COMMA assignment_expression
    (190) condition ::= expression *

                         COMMA shift  28
                     {default} reduce 190

State 129:
          iteration_statement ::= WHILE scope_push * LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop

                    LEFT_PAREN shift  8

State 130:
          selection_statement ::= IF * LEFT_PAREN expression RIGHT_PAREN selection_rest_statement

                    LEFT_PAREN shift  14

State 131:
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  222

State 132:
          function_header ::= fully_specified_type * IDENTIFIER LEFT_PAREN
    (121) single_declaration ::= fully_specified_type *
          single_declaration ::= fully_specified_type * IDENTIFIER
          single_declaration ::= fully_specified_type * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  86
                     {default} reduce 121

State 133:
    (101) function_declarator ::= function_header_with_parameters *
          function_header_with_parameters ::= function_header_with_parameters * COMMA parameter_declaration

                         COMMA shift  60
                     {default} reduce 101

State 134:
          type_qualifier ::= INVARIANT * VARYING

                       VARYING shift  226

State 135:
          parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  237

State 136:
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  238

State 137:
    (105) parameter_declarator ::= type_specifier IDENTIFIER *
          parameter_declarator ::= type_specifier IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  22
                     {default} reduce 105

State 138:
          function_prototype ::= function_declarator * RIGHT_PAREN

                   RIGHT_PAREN shift  240

State 139:
          struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  244

State 140:
    (165) struct_declarator ::= IDENTIFIER *
          struct_declarator ::= IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  23
                     {default} reduce 165

State 141:
          struct_specifier ::= STRUCT IDENTIFIER * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    LEFT_BRACE shift  55

State 142:
          declaration ::= PRECISION precision_qualifier type_specifier_no_prec * SEMICOLON

                     SEMICOLON shift  274

State 143:
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  277

State 144:
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  97

State 145:
          declaration ::= function_prototype * SEMICOLON

                     SEMICOLON shift  343

State 146:
     (39) constructor_identifier ::= TYPE_NAME *
    (154) type_specifier_no_prec ::= TYPE_NAME *

                    LEFT_PAREN reduce 39
                     {default} reduce 154

State 147:
     (38) constructor_identifier ::= MAT4 *
    (150) type_specifier_no_prec ::= MAT4 *

                    LEFT_PAREN reduce 38
                     {default} reduce 150

State 148:
     (37) constructor_identifier ::= MAT3 *
    (149) type_specifier_no_prec ::= MAT3 *

                    LEFT_PAREN reduce 37
                     {default} reduce 149

State 149:
     (36) constructor_identifier ::= MAT2 *
    (148) type_specifier_no_prec ::= MAT2 *

                    LEFT_PAREN reduce 36
                     {default} reduce 148

State 150:
     (35) constructor_identifier ::= IVEC4 *
    (147) type_specifier_no_prec ::= IVEC4 *

                    LEFT_PAREN reduce 35
                     {default} reduce 147

State 151:
     (34) constructor_identifier ::= IVEC3 *
    (146) type_specifier_no_prec ::= IVEC3 *

                    LEFT_PAREN reduce 34
                     {default} reduce 146

State 152:
     (33) constructor_identifier ::= IVEC2 *
    (145) type_specifier_no_prec ::= IVEC2 *

                    LEFT_PAREN reduce 33
                     {default} reduce 145

State 153:
     (32) constructor_identifier ::= BVEC4 *
    (144) type_specifier_no_prec ::= BVEC4 *

                    LEFT_PAREN reduce 32
                     {default} reduce 144

State 154:
     (31) constructor_identifier ::= BVEC3 *
    (143) type_specifier_no_prec ::= BVEC3 *

                    LEFT_PAREN reduce 31
                     {default} reduce 143

State 155:
     (30) constructor_identifier ::= BVEC2 *
    (142) type_specifier_no_prec ::= BVEC2 *

                    LEFT_PAREN reduce 30
                     {default} reduce 142

State 156:
     (29) constructor_identifier ::= VEC4 *
    (141) type_specifier_no_prec ::= VEC4 *

                    LEFT_PAREN reduce 29
                     {default} reduce 141

State 157:
     (28) constructor_identifier ::= VEC3 *
    (140) type_specifier_no_prec ::= VEC3 *

                    LEFT_PAREN reduce 28
                     {default} reduce 140

State 158:
     (27) constructor_identifier ::= VEC2 *
    (139) type_specifier_no_prec ::= VEC2 *

                    LEFT_PAREN reduce 27
                     {default} reduce 139

State 159:
     (26) constructor_identifier ::= BOOL *
    (138) type_specifier_no_prec ::= BOOL *

                    LEFT_PAREN reduce 26
                     {default} reduce 138

State 160:
     (25) constructor_identifier ::= INT *
    (137) type_specifier_no_prec ::= INT *

                    LEFT_PAREN reduce 25
                     {default} reduce 137

State 161:
     (24) constructor_identifier ::= FLOAT *
    (136) type_specifier_no_prec ::= FLOAT *

                    LEFT_PAREN reduce 24
                     {default} reduce 136

State 162:
          postfix_expression ::= postfix_expression DOT * FIELD_SELECTION

               FIELD_SELECTION shift  284

State 163:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (77) logical_or_expression ::= logical_or_expression OR_OP logical_xor_expression *

                        XOR_OP shift  30
                     {default} reduce 77

State 164:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (75) logical_xor_expression ::= logical_xor_expression XOR_OP logical_and_expression *

                        AND_OP shift  31
                     {default} reduce 75

State 165:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (76) logical_or_expression ::= logical_xor_expression *

                        XOR_OP shift  30
                     {default} reduce 76

State 166:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (73) logical_and_expression ::= logical_and_expression AND_OP inclusive_or_expression *

                  VERTICAL_BAR shift  32
                     {default} reduce 73

State 167:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (74) logical_xor_expression ::= logical_and_expression *

                        AND_OP shift  31
                     {default} reduce 74

State 168:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (71) inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR exclusive_or_expression *

                         CARET shift  33
                     {default} reduce 71

State 169:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (72) logical_and_expression ::= inclusive_or_expression *

                  VERTICAL_BAR shift  32
                     {default} reduce 72

State 170:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (69) exclusive_or_expression ::= exclusive_or_expression CARET and_expression *

                     AMPERSAND shift  34
                     {default} reduce 69

State 171:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (70) inclusive_or_expression ::= exclusive_or_expression *

                         CARET shift  33
                     {default} reduce 70

State 172:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (68) exclusive_or_expression ::= and_expression *

                     AMPERSAND shift  34
                     {default} reduce 68

State 173:
          function_call_header ::= function_identifier * LEFT_PAREN

                    LEFT_PAREN shift  329

State 174:
          function_call_generic ::= function_call_header_no_parameters * RIGHT_PAREN

                   RIGHT_PAREN shift  332

State 175:
     (13) integer_expression ::= expression *
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  28
                     {default} reduce 13

State 176:
          postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  336

State 177:
      (1) variable_identifier ::= IDENTIFIER *
     (23) function_identifier ::= IDENTIFIER *

                    LEFT_PAREN reduce 23
                     {default} reduce 1

State 178:
    (206) translation_unit ::= external_declaration *

                     {default} reduce 206

State 179:
    (210) external_declaration ::= preprocessor_directive *

                     {default} reduce 210

State 180:
    (209) external_declaration ::= declaration *

                     {default} reduce 209

State 181:
    (208) external_declaration ::= function_definition *

                     {default} reduce 208

State 182:
    (207) translation_unit ::= translation_unit external_declaration *

                     {default} reduce 207

State 183:
    (211) function_definition ::= function_prototype scope_push compound_statement_no_new_scope scope_pop *

                     {default} reduce 211

State 184:
    (183) statement_list ::= statement *

                     {default} reduce 183

State 185:
    (188) selection_rest_statement ::= statement_with_scope ELSE statement_with_scope *

                     {default} reduce 188

State 186:
    (187) selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement *

                     {default} reduce 187

State 187:
    (196) for_init_statement ::= declaration_statement *

                     {default} reduce 196

State 188:
    (195) for_init_statement ::= expression_statement *

                     {default} reduce 195

State 189:
    (197) conditionopt ::= condition *

                     {default} reduce 197

State 190:
    (212) preprocessor_directive ::= PREPROCESSOR_DIRECTIVE *

                     {default} reduce 212

State 191:
    (205) jump_statement ::= DISCARD SEMICOLON *

                     {default} reduce 205

State 192:
    (203) jump_statement ::= RETURN SEMICOLON *

                     {default} reduce 203

State 193:
    (204) jump_statement ::= RETURN expression SEMICOLON *

                     {default} reduce 204

State 194:
    (202) jump_statement ::= BREAK SEMICOLON *

                     {default} reduce 202

State 195:
    (201) jump_statement ::= CONTINUE SEMICOLON *

                     {default} reduce 201

State 196:
    (194) iteration_statement ::= FOR scope_push LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope scope_pop *

                     {default} reduce 194

State 197:
    (193) iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON *

                     {default} reduce 193

State 198:
    (192) iteration_statement ::= WHILE scope_push LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope scope_pop *

                     {default} reduce 192

State 199:
    (172) statement_no_new_scope ::= simple_statement *

                     {default} reduce 172

State 200:
    (171) statement_no_new_scope ::= compound_statement_no_new_scope *

                     {default} reduce 171

State 201:
    (191) condition ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 191

State 202:
    (174) statement_with_scope ::= scope_push simple_statement scope_pop *

                     {default} reduce 174

State 203:
    (173) statement_with_scope ::= scope_push compound_statement_no_new_scope scope_pop *

                     {default} reduce 173

State 204:
    (185) expression_statement ::= SEMICOLON *

                     {default} reduce 185

State 205:
    (184) statement_list ::= statement_list statement *

                     {default} reduce 184

State 206:
    (182) compound_statement_no_new_scope ::= LEFT_BRACE statement_list RIGHT_BRACE *

                     {default} reduce 182

State 207:
    (181) compound_statement_no_new_scope ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 181

State 208:
    (180) simple_statement ::= preprocessor_directive *

                     {default} reduce 180

State 209:
    (179) simple_statement ::= jump_statement *

                     {default} reduce 179

State 210:
    (178) simple_statement ::= iteration_statement *

                     {default} reduce 178

State 211:
    (177) simple_statement ::= selection_statement *

                     {default} reduce 177

State 212:
    (176) simple_statement ::= expression_statement *

                     {default} reduce 176

State 213:
    (175) simple_statement ::= declaration_statement *

                     {default} reduce 175

State 214:
    (170) statement ::= simple_statement *

                     {default} reduce 170

State 215:
    (169) statement ::= scope_push compound_statement_no_new_scope scope_pop *

                     {default} reduce 169

State 216:
    (168) declaration_statement ::= declaration *

                     {default} reduce 168

State 217:
    (127) fully_specified_type ::= type_qualifier type_specifier *

                     {default} reduce 127

State 218:
    (126) fully_specified_type ::= type_specifier *

                     {default} reduce 126

State 219:
    (125) single_declaration ::= INVARIANT IDENTIFIER *

                     {default} reduce 125

State 220:
    (117) init_declarator_list ::= single_declaration *

                     {default} reduce 117

State 221:
    (124) single_declaration ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 124

State 222:
    (123) single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 123

State 223:
    (104) function_header ::= fully_specified_type IDENTIFIER LEFT_PAREN *

                     {default} reduce 104

State 224:
    (103) function_header_with_parameters ::= function_header_with_parameters COMMA parameter_declaration *

                     {default} reduce 103

State 225:
    (132) type_qualifier ::= UNIFORM *

                     {default} reduce 132

State 226:
    (131) type_qualifier ::= INVARIANT VARYING *

                     {default} reduce 131

State 227:
    (130) type_qualifier ::= VARYING *

                     {default} reduce 130

State 228:
    (129) type_qualifier ::= ATTRIBUTE *

                     {default} reduce 129

State 229:
    (128) type_qualifier ::= CONST *

                     {default} reduce 128

State 230:
    (110) parameter_declaration ::= parameter_qualifier parameter_type_specifier *

                     {default} reduce 110

State 231:
    (108) parameter_declaration ::= parameter_qualifier parameter_declarator *

                     {default} reduce 108

State 232:
    (114) parameter_qualifier ::= INOUT *

                     {default} reduce 114

State 233:
    (113) parameter_qualifier ::= OUT *

                     {default} reduce 113

State 234:
    (112) parameter_qualifier ::= IN *

                     {default} reduce 112

State 235:
    (109) parameter_declaration ::= type_qualifier parameter_qualifier parameter_type_specifier *

                     {default} reduce 109

State 236:
    (107) parameter_declaration ::= type_qualifier parameter_qualifier parameter_declarator *

                     {default} reduce 107

State 237:
    (116) parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 116

State 238:
    (106) parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 106

State 239:
    (102) function_header_with_parameters ::= function_header parameter_declaration *

                     {default} reduce 102

State 240:
     (99) function_prototype ::= function_declarator RIGHT_PAREN *

                     {default} reduce 99

State 241:
    (159) struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 159

State 242:
    (160) struct_declaration_list ::= struct_declaration *

                     {default} reduce 160

State 243:
    (163) struct_declarator_list ::= struct_declarator *

                     {default} reduce 163

State 244:
    (166) struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 166

State 245:
    (164) struct_declarator_list ::= struct_declarator_list COMMA struct_declarator *

                     {default} reduce 164

State 246:
    (162) struct_declaration ::= type_specifier struct_declarator_list SEMICOLON *

                     {default} reduce 162

State 247:
    (161) struct_declaration_list ::= struct_declaration_list struct_declaration *

                     {default} reduce 161

State 248:
    (158) struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 158

State 249:
    (157) precision_qualifier ::= LOW_PRECISION *

                     {default} reduce 157

State 250:
    (156) precision_qualifier ::= MEDIUM_PRECISION *

                     {default} reduce 156

State 251:
    (155) precision_qualifier ::= HIGH_PRECISION *

                     {default} reduce 155

State 252:
    (134) type_specifier ::= precision_qualifier type_specifier_no_prec *

                     {default} reduce 134

State 253:
    (133) type_specifier ::= type_specifier_no_prec *

                     {default} reduce 133

State 254:
    (154) type_specifier_no_prec ::= TYPE_NAME *

                     {default} reduce 154

State 255:
    (153) type_specifier_no_prec ::= struct_specifier *

                     {default} reduce 153

State 256:
    (152) type_specifier_no_prec ::= SAMPLERCUBE *

                     {default} reduce 152

State 257:
    (151) type_specifier_no_prec ::= SAMPLER2D *

                     {default} reduce 151

State 258:
    (150) type_specifier_no_prec ::= MAT4 *

                     {default} reduce 150

State 259:
    (149) type_specifier_no_prec ::= MAT3 *

                     {default} reduce 149

State 260:
    (148) type_specifier_no_prec ::= MAT2 *

                     {default} reduce 148

State 261:
    (147) type_specifier_no_prec ::= IVEC4 *

                     {default} reduce 147

State 262:
    (146) type_specifier_no_prec ::= IVEC3 *

                     {default} reduce 146

State 263:
    (145) type_specifier_no_prec ::= IVEC2 *

                     {default} reduce 145

State 264:
    (144) type_specifier_no_prec ::= BVEC4 *

                     {default} reduce 144

State 265:
    (143) type_specifier_no_prec ::= BVEC3 *

                     {default} reduce 143

State 266:
    (142) type_specifier_no_prec ::= BVEC2 *

                     {default} reduce 142

State 267:
    (141) type_specifier_no_prec ::= VEC4 *

                     {default} reduce 141

State 268:
    (140) type_specifier_no_prec ::= VEC3 *

                     {default} reduce 140

State 269:
    (139) type_specifier_no_prec ::= VEC2 *

                     {default} reduce 139

State 270:
    (138) type_specifier_no_prec ::= BOOL *

                     {default} reduce 138

State 271:
    (137) type_specifier_no_prec ::= INT *

                     {default} reduce 137

State 272:
    (136) type_specifier_no_prec ::= FLOAT *

                     {default} reduce 136

State 273:
    (135) type_specifier_no_prec ::= VOID *

                     {default} reduce 135

State 274:
     (98) declaration ::= PRECISION precision_qualifier type_specifier_no_prec SEMICOLON *

                     {default} reduce 98

State 275:
    (167) initializer ::= assignment_expression *

                     {default} reduce 167

State 276:
    (120) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL initializer *

                     {default} reduce 120

State 277:
    (119) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 119

State 278:
     (95) constant_expression ::= conditional_expression *

                     {default} reduce 95

State 279:
     (97) declaration ::= init_declarator_list SEMICOLON *

                     {default} reduce 97

State 280:
    (186) expression_statement ::= expression SEMICOLON *

                     {default} reduce 186

State 281:
     (94) expression ::= expression COMMA assignment_expression *

                     {default} reduce 94

State 282:
     (12) postfix_expression ::= postfix_expression DEC_OP *

                     {default} reduce 12

State 283:
     (11) postfix_expression ::= postfix_expression INC_OP *

                     {default} reduce 11

State 284:
     (10) postfix_expression ::= postfix_expression DOT FIELD_SELECTION *

                     {default} reduce 10

State 285:
     (20) function_call_header_with_parameters ::= function_call_header_with_parameters COMMA assignment_expression *

                     {default} reduce 20

State 286:
     (92) assignment_operator ::= OR_ASSIGN *

                     {default} reduce 92

State 287:
     (91) assignment_operator ::= XOR_ASSIGN *

                     {default} reduce 91

State 288:
     (90) assignment_operator ::= AND_ASSIGN *

                     {default} reduce 90

State 289:
     (89) assignment_operator ::= RIGHT_ASSIGN *

                     {default} reduce 89

State 290:
     (88) assignment_operator ::= LEFT_ASSIGN *

                     {default} reduce 88

State 291:
     (87) assignment_operator ::= SUB_ASSIGN *

                     {default} reduce 87

State 292:
     (86) assignment_operator ::= ADD_ASSIGN *

                     {default} reduce 86

State 293:
     (85) assignment_operator ::= MOD_ASSIGN *

                     {default} reduce 85

State 294:
     (84) assignment_operator ::= DIV_ASSIGN *

                     {default} reduce 84

State 295:
     (83) assignment_operator ::= MUL_ASSIGN *

                     {default} reduce 83

State 296:
     (82) assignment_operator ::= EQUAL *

                     {default} reduce 82

State 297:
     (81) assignment_expression ::= unary_expression assignment_operator assignment_expression *

                     {default} reduce 81

State 298:
     (93) expression ::= assignment_expression *

                     {default} reduce 93

State 299:
     (80) assignment_expression ::= conditional_expression *

                     {default} reduce 80

State 300:
     (79) conditional_expression ::= logical_or_expression QUESTION expression COLON assignment_expression *

                     {default} reduce 79

State 301:
     (48) multiplicative_expression ::= unary_expression *

                     {default} reduce 48

State 302:
     (51) multiplicative_expression ::= multiplicative_expression PERCENT unary_expression *

                     {default} reduce 51

State 303:
     (50) multiplicative_expression ::= multiplicative_expression SLASH unary_expression *

                     {default} reduce 50

State 304:
     (49) multiplicative_expression ::= multiplicative_expression STAR unary_expression *

                     {default} reduce 49

State 305:
     (47) unary_operator ::= TILDE *

                     {default} reduce 47

State 306:
     (46) unary_operator ::= BANG *

                     {default} reduce 46

State 307:
     (45) unary_operator ::= DASH *

                     {default} reduce 45

State 308:
     (44) unary_operator ::= PLUS *

                     {default} reduce 44

State 309:
     (43) unary_expression ::= unary_operator unary_expression *

                     {default} reduce 43

State 310:
     (42) unary_expression ::= DEC_OP unary_expression *

                     {default} reduce 42

State 311:
     (41) unary_expression ::= INC_OP unary_expression *

                     {default} reduce 41

State 312:
     (39) constructor_identifier ::= TYPE_NAME *

                     {default} reduce 39

State 313:
     (38) constructor_identifier ::= MAT4 *

                     {default} reduce 38

State 314:
     (37) constructor_identifier ::= MAT3 *

                     {default} reduce 37

State 315:
     (36) constructor_identifier ::= MAT2 *

                     {default} reduce 36

State 316:
     (35) constructor_identifier ::= IVEC4 *

                     {default} reduce 35

State 317:
     (34) constructor_identifier ::= IVEC3 *

                     {default} reduce 34

State 318:
     (33) constructor_identifier ::= IVEC2 *

                     {default} reduce 33

State 319:
     (32) constructor_identifier ::= BVEC4 *

                     {default} reduce 32

State 320:
     (31) constructor_identifier ::= BVEC3 *

                     {default} reduce 31

State 321:
     (30) constructor_identifier ::= BVEC2 *

                     {default} reduce 30

State 322:
     (29) constructor_identifier ::= VEC4 *

                     {default} reduce 29

State 323:
     (28) constructor_identifier ::= VEC3 *

                     {default} reduce 28

State 324:
     (27) constructor_identifier ::= VEC2 *

                     {default} reduce 27

State 325:
     (26) constructor_identifier ::= BOOL *

                     {default} reduce 26

State 326:
     (25) constructor_identifier ::= INT *

                     {default} reduce 25

State 327:
     (24) constructor_identifier ::= FLOAT *

                     {default} reduce 24

State 328:
     (22) function_identifier ::= constructor_identifier *

                     {default} reduce 22

State 329:
     (21) function_call_header ::= function_identifier LEFT_PAREN *

                     {default} reduce 21

State 330:
     (19) function_call_header_with_parameters ::= function_call_header assignment_expression *

                     {default} reduce 19

State 331:
     (17) function_call_header_no_parameters ::= function_call_header VOID *

                     {default} reduce 17

State 332:
     (16) function_call_generic ::= function_call_header_no_parameters RIGHT_PAREN *

                     {default} reduce 16

State 333:
     (15) function_call_generic ::= function_call_header_with_parameters RIGHT_PAREN *

                     {default} reduce 15

State 334:
     (14) function_call ::= function_call_generic *

                     {default} reduce 14

State 335:
      (9) postfix_expression ::= function_call *

                     {default} reduce 9

State 336:
      (8) postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET *

                     {default} reduce 8

State 337:
      (7) postfix_expression ::= primary_expression *

                     {default} reduce 7

State 338:
      (6) primary_expression ::= LEFT_PAREN expression RIGHT_PAREN *

                     {default} reduce 6

State 339:
      (5) primary_expression ::= BOOLCONSTANT *

                     {default} reduce 5

State 340:
      (4) primary_expression ::= FLOATCONSTANT *

                     {default} reduce 4

State 341:
      (3) primary_expression ::= INTCONSTANT *

                     {default} reduce 3

State 342:
      (2) primary_expression ::= variable_identifier *

                     {default} reduce 2

State 343:
     (96) declaration ::= function_prototype SEMICOLON *

                     {default} reduce 96

----------------------------------------------------
Symbols:
    0: $:
    1: IDENTIFIER
    2: INTCONSTANT
    3: FLOATCONSTANT
    4: BOOLCONSTANT
    5: LEFT_PAREN
    6: RIGHT_PAREN
    7: LEFT_BRACKET
    8: RIGHT_BRACKET
    9: DOT
   10: FIELD_SELECTION
   11: INC_OP
   12: DEC_OP
   13: VOID
   14: COMMA
   15: FLOAT
   16: INT
   17: BOOL
   18: VEC2
   19: VEC3
   20: VEC4
   21: BVEC2
   22: BVEC3
   23: BVEC4
   24: IVEC2
   25: IVEC3
   26: IVEC4
   27: MAT2
   28: MAT3
   29: MAT4
   30: TYPE_NAME
   31: PLUS
   32: DASH
   33: BANG
   34: TILDE
   35: STAR
   36: SLASH
   37: PERCENT
   38: LEFT_OP
   39: RIGHT_OP
   40: LEFT_ANGLE
   41: RIGHT_ANGLE
   42: LE_OP
   43: GE_OP
   44: EQ_OP
   45: NE_OP
   46: AMPERSAND
   47: CARET
   48: VERTICAL_BAR
   49: AND_OP
   50: XOR_OP
   51: OR_OP
   52: QUESTION
   53: COLON
   54: EQUAL
   55: MUL_ASSIGN
   56: DIV_ASSIGN
   57: MOD_ASSIGN
   58: ADD_ASSIGN
   59: SUB_ASSIGN
   60: LEFT_ASSIGN
   61: RIGHT_ASSIGN
   62: AND_ASSIGN
   63: XOR_ASSIGN
   64: OR_ASSIGN
   65: SEMICOLON
   66: PRECISION
   67: IN
   68: OUT
   69: INOUT
   70: INVARIANT
   71: CONST
   72: ATTRIBUTE
   73: VARYING
   74: UNIFORM
   75: SAMPLER2D
   76: SAMPLERCUBE
   77: HIGH_PRECISION
   78: MEDIUM_PRECISION
   79: LOW_PRECISION
   80: STRUCT
   81: LEFT_BRACE
   82: RIGHT_BRACE
   83: IF
   84: ELSE
   85: WHILE
   86: DO
   87: FOR
   88: CONTINUE
   89: BREAK
   90: RETURN
   91: DISCARD
   92: PREPROCESSOR_DIRECTIVE
   93: error:
   94: root: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   95: translation_unit: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   96: variable_identifier: IDENTIFIER
   97: primary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN
   98: expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
   99: postfix_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  100: integer_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  101: function_call: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  102: function_call_generic: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  103: function_call_header_with_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  104: function_call_header_no_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  105: function_call_header: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  106: assignment_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  107: function_identifier: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  108: constructor_identifier: FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  109: unary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  110: unary_operator: PLUS DASH BANG TILDE
  111: multiplicative_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  112: additive_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  113: shift_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  114: relational_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  115: equality_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  116: and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  117: exclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  118: inclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  119: logical_and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  120: logical_xor_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  121: logical_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  122: conditional_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  123: assignment_operator: EQUAL MUL_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
  124: constant_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  125: declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  126: function_prototype: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  127: init_declarator_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  128: precision_qualifier: HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION
  129: type_specifier_no_prec: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE STRUCT
  130: function_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  131: function_header: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  132: function_header_with_parameters: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  133: parameter_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME IN OUT INOUT INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  134: fully_specified_type: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  135: parameter_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  136: type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  137: type_qualifier: INVARIANT CONST ATTRIBUTE VARYING UNIFORM
  138: parameter_qualifier: <lambda> IN OUT INOUT
  139: parameter_type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  140: single_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  141: initializer: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  142: struct_specifier: STRUCT
  143: struct_declaration_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  144: struct_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  145: struct_declarator_list: IDENTIFIER
  146: struct_declarator: IDENTIFIER
  147: declaration_statement: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  148: statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  149: scope_push: <lambda>
  150: compound_statement_no_new_scope: LEFT_BRACE
  151: scope_pop: <lambda>
  152: simple_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  153: statement_no_new_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  154: statement_with_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  155: expression_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON
  156: selection_statement: IF
  157: iteration_statement: WHILE DO FOR
  158: jump_statement: CONTINUE BREAK RETURN DISCARD
  159: preprocessor_directive: PREPROCESSOR_DIRECTIVE
  160: statement_list: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  161: selection_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  162: condition: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  163: for_init_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  164: for_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  165: conditionopt: <lambda> IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  166: external_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
  167: function_definition: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
