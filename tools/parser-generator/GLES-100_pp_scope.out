State 0:
          root ::= * translation_unit
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype scope_push compound_statement_pop_scope
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
        PREPROCESSOR_DIRECTIVE shift  194
                          root accept
              translation_unit shift  39
                   declaration shift  183
            function_prototype shift  77
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
        preprocessor_directive shift  182
          external_declaration shift  181
           function_definition shift  184

State 1:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_pop_scope ::= LEFT_BRACE * scope_pop RIGHT_BRACE
          compound_statement_pop_scope ::= LEFT_BRACE * statement_list scope_pop RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          statement_list ::= * statement_no_new_scope
          statement_list ::= * statement_list statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE
    (218) scope_pop ::= *

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
                     scope_pop shift  133
        statement_no_new_scope shift  190
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215
                statement_list shift  5
                     {default} reduce 218

State 2:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE * RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE * statement_list RIGHT_BRACE
          statement_list ::= * statement_no_new_scope
          statement_list ::= * statement_list statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  212
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
        statement_no_new_scope shift  190
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215
                statement_list shift  6

State 3:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= LEFT_BRACE scope_push statement_list * scope_pop RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          statement_list ::= statement_list * statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE
    (218) scope_pop ::= *

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
                     scope_pop shift  125
        statement_no_new_scope shift  210
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215
                     {default} reduce 218

State 4:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= LEFT_BRACE scope_push * statement_list scope_pop RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          statement_list ::= * statement_no_new_scope
          statement_list ::= * statement_list statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
        statement_no_new_scope shift  190
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215
                statement_list shift  3

State 5:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_pop_scope ::= LEFT_BRACE statement_list * scope_pop RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          statement_list ::= statement_list * statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE
    (218) scope_pop ::= *

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
                     scope_pop shift  132
        statement_no_new_scope shift  210
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215
                     {default} reduce 218

State 6:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_no_new_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE statement_list * RIGHT_BRACE
          statement_list ::= statement_list * statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  2
                   RIGHT_BRACE shift  211
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  221
        statement_no_new_scope shift  210
compound_statement_no_new_scope shift  222
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215

State 7:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_pop_scope ::= * compound_statement_pop_scope
          statement_pop_scope ::= * simple_statement scope_pop
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_pop_scope ::= * LEFT_BRACE scope_pop RIGHT_BRACE
          compound_statement_pop_scope ::= * LEFT_BRACE statement_list scope_pop RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          iteration_statement ::= FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN * statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  1
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  79
           statement_pop_scope shift  200
  compound_statement_pop_scope shift  205
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215

State 8:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_pop_scope ::= * compound_statement_pop_scope
          statement_pop_scope ::= * simple_statement scope_pop
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_pop_scope ::= * LEFT_BRACE scope_pop RIGHT_BRACE
          compound_statement_pop_scope ::= * LEFT_BRACE statement_list scope_pop RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= WHILE LEFT_PAREN scope_push condition RIGHT_PAREN * statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                    LEFT_BRACE shift  1
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  79
           statement_pop_scope shift  203
  compound_statement_pop_scope shift  205
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215

State 9:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_with_scope ::= scope_push * simple_statement scope_pop
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                            IF shift  131
                         WHILE shift  130
                            DO shift  67
                           FOR shift  124
                      CONTINUE shift  122
                         BREAK shift  121
                        RETURN shift  14
                       DISCARD shift  120
        PREPROCESSOR_DIRECTIVE shift  194
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  220
              simple_statement shift  81
          expression_statement shift  219
           selection_statement shift  218
           iteration_statement shift  217
                jump_statement shift  216
        preprocessor_directive shift  215

State 10:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          iteration_statement ::= FOR LEFT_PAREN scope_push * for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
          for_init_statement ::= * expression_statement
          for_init_statement ::= * declaration_statement

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  209
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  99
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   declaration shift  223
            function_prototype shift  148
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
         declaration_statement shift  191
          expression_statement shift  192
            for_init_statement shift  11

State 11:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= FOR LEFT_PAREN scope_push for_init_statement * for_rest_statement RIGHT_PAREN statement_pop_scope
          conditionopt ::= * condition
    (202) conditionopt ::= *
          for_rest_statement ::= * conditionopt SEMICOLON
          for_rest_statement ::= * conditionopt SEMICOLON expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     INVARIANT shift  137
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  129
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
          fully_specified_type shift  128
                type_specifier shift  225
                type_qualifier shift  62
              struct_specifier shift  262
                     condition shift  193
            for_rest_statement shift  123
                  conditionopt shift  119
                     {default} reduce 202

State 12:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= WHILE LEFT_PAREN scope_push * condition RIGHT_PAREN statement_pop_scope

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  280
                         FLOAT shift  164
                           INT shift  163
                          BOOL shift  162
                          VEC2 shift  161
                          VEC3 shift  160
                          VEC4 shift  159
                         BVEC2 shift  158
                         BVEC3 shift  157
                         BVEC4 shift  156
                         IVEC2 shift  155
                         IVEC3 shift  154
                         IVEC4 shift  153
                          MAT2 shift  152
                          MAT3 shift  151
                          MAT4 shift  150
                     TYPE_NAME shift  149
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     INVARIANT shift  137
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  129
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
          fully_specified_type shift  128
                type_specifier shift  225
                type_qualifier shift  62
              struct_specifier shift  262
                     condition shift  126

State 13:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression LEFT_BRACKET * integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          integer_expression ::= * expression
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  178
            postfix_expression shift  85
            integer_expression shift  179
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 14:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= RETURN * SEMICOLON
          jump_statement ::= RETURN * expression SEMICOLON

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
                     SEMICOLON shift  196
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  91
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 15:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN * expression RIGHT_PAREN SEMICOLON

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  90
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 16:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
    (203) for_rest_statement ::= conditionopt SEMICOLON *
          for_rest_statement ::= conditionopt SEMICOLON * expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  118
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                     {default} reduce 203

State 17:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          condition ::= fully_specified_type IDENTIFIER EQUAL * initializer

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  282
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   initializer shift  206

State 18:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN * expression RIGHT_PAREN selection_rest_statement

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  92
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 19:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          single_declaration ::= fully_specified_type IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  282
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   initializer shift  228

State 20:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  282
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                   initializer shift  283

State 21:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION * expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  100
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 22:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          primary_expression ::= LEFT_PAREN * expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
                    expression shift  113
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  305
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 23:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= function_call_header * VOID
          function_call_header_no_parameters ::= * function_call_header
     (18) function_call_header_no_parameters ::= function_call_header *
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= function_call_header * assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  338
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  337
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306
                     {default} reduce 18

State 24:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  285
           constant_expression shift  134

State 25:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_type_specifier ::= type_specifier LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  285
           constant_expression shift  138

State 26:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  285
           constant_expression shift  139

State 27:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          struct_declarator ::= IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  285
           constant_expression shift  142

State 28:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  285
           constant_expression shift  146

State 29:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION expression COLON * assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  307
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 30:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  304
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 31:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header_with_parameters ::= function_call_header_with_parameters COMMA * assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  292
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 32:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
         assignment_expression shift  288
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  71
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  168
         logical_or_expression shift  101
        conditional_expression shift  306

State 33:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= logical_or_expression OR_OP * logical_xor_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  170
        logical_xor_expression shift  166

State 34:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= logical_xor_expression XOR_OP * logical_and_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  172
        logical_and_expression shift  167

State 35:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= logical_and_expression AND_OP * inclusive_or_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  174
       inclusive_or_expression shift  169

State 36:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR * exclusive_or_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  175
       exclusive_or_expression shift  171

State 37:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= exclusive_or_expression CARET * and_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  103
                and_expression shift  173

State 38:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= and_expression AMPERSAND * equality_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  84
           equality_expression shift  102

State 39:
      (0) root ::= translation_unit *
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype scope_push compound_statement_pop_scope
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                             $ reduce 0
                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     PRECISION shift  73
                     INVARIANT shift  93
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
        PREPROCESSOR_DIRECTIVE shift  194
                   declaration shift  183
            function_prototype shift  77
          init_declarator_list shift  98
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
           function_declarator shift  141
               function_header shift  64
function_header_with_parameters shift  136
          fully_specified_type shift  135
                type_specifier shift  225
                type_qualifier shift  62
            single_declaration shift  227
              struct_specifier shift  262
        preprocessor_directive shift  182
          external_declaration shift  185
           function_definition shift  184

State 40:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression NE_OP * relational_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  82

State 41:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression EQ_OP * relational_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  110
         relational_expression shift  83

State 42:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression GE_OP * shift_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  104

State 43:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LE_OP * shift_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  105

State 44:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression RIGHT_ANGLE * shift_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  106

State 45:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LEFT_ANGLE * shift_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  111
              shift_expression shift  107

State 46:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression RIGHT_OP * additive_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  108

State 47:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression LEFT_OP * additive_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  89
           additive_expression shift  109

State 48:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression DASH * multiplicative_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  87

State 49:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression PLUS * multiplicative_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  308
                unary_operator shift  53
     multiplicative_expression shift  88

State 50:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression PERCENT * unary_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  309
                unary_operator shift  53

State 51:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression SLASH * unary_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  310
                unary_operator shift  53

State 52:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression STAR * unary_expression

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  311
                unary_operator shift  53

State 53:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_expression ::= unary_operator * unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  316
                unary_operator shift  53

State 54:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  317
                unary_operator shift  53

State 55:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  180
                   INTCONSTANT shift  348
                 FLOATCONSTANT shift  347
                  BOOLCONSTANT shift  346
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  334
                           INT shift  333
                          BOOL shift  332
                          VEC2 shift  331
                          VEC3 shift  330
                          VEC4 shift  329
                         BVEC2 shift  328
                         BVEC3 shift  327
                         BVEC4 shift  326
                         IVEC2 shift  325
                         IVEC3 shift  324
                         IVEC4 shift  323
                          MAT2 shift  322
                          MAT3 shift  321
                          MAT4 shift  320
                     TYPE_NAME shift  319
                          PLUS shift  315
                          DASH shift  314
                          BANG shift  313
                         TILDE shift  312
           variable_identifier shift  349
            primary_expression shift  344
            postfix_expression shift  85
                 function_call shift  342
         function_call_generic shift  341
function_call_header_with_parameters shift  112
function_call_header_no_parameters shift  177
          function_call_header shift  23
           function_identifier shift  176
        constructor_identifier shift  335
              unary_expression shift  318
                unary_operator shift  53

State 56:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= parameter_qualifier * parameter_declarator
          parameter_declaration ::= parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
          parameter_declarator shift  238
                type_specifier shift  94
      parameter_type_specifier shift  237
              struct_specifier shift  262

State 57:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_declarator
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
          parameter_declarator shift  243
                type_specifier shift  94
      parameter_type_specifier shift  242
              struct_specifier shift  262

State 58:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
                type_specifier shift  70
              struct_specifier shift  262
       struct_declaration_list shift  60
            struct_declaration shift  249

State 59:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
                type_specifier shift  70
              struct_specifier shift  262
       struct_declaration_list shift  61
            struct_declaration shift  249

State 60:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                   RIGHT_BRACE shift  248
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
                type_specifier shift  70
              struct_specifier shift  262
            struct_declaration shift  254

State 61:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
                   RIGHT_BRACE shift  255
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
                type_specifier shift  70
              struct_specifier shift  262
            struct_declaration shift  254

State 62:
          fully_specified_type ::= type_qualifier * type_specifier
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
                        STRUCT shift  96
           precision_qualifier shift  68
        type_specifier_no_prec shift  260
                type_specifier shift  224
              struct_specifier shift  262

State 63:
          statement_with_scope ::= * compound_statement_with_scope
          statement_with_scope ::= * scope_push simple_statement scope_pop
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE scope_push statement_list scope_pop RIGHT_BRACE
          selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN * selection_rest_statement
          selection_rest_statement ::= * statement_with_scope ELSE statement_with_scope
          selection_rest_statement ::= * statement_with_scope
    (217) scope_push ::= *

                    LEFT_BRACE shift  74
          statement_with_scope shift  114
 compound_statement_with_scope shift  208
                    scope_push shift  9
      selection_rest_statement shift  188
                     {default} reduce 217

State 64:
    (100) function_declarator ::= function_header *
          function_header_with_parameters ::= function_header * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                   RIGHT_PAREN reduce 100
                            IN shift  241
                           OUT shift  240
                         INOUT shift  239
                     INVARIANT shift  137
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
         parameter_declaration shift  246
                type_qualifier shift  72
           parameter_qualifier shift  56
                     {default} reduce 111

State 65:
          function_header_with_parameters ::= function_header_with_parameters COMMA * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                            IN shift  241
                           OUT shift  240
                         INOUT shift  239
                     INVARIANT shift  137
                         CONST shift  236
                     ATTRIBUTE shift  235
                       VARYING shift  234
                       UNIFORM shift  232
         parameter_declaration shift  231
                type_qualifier shift  72
           parameter_qualifier shift  56
                     {default} reduce 111

State 66:
          statement_with_scope ::= * compound_statement_with_scope
          statement_with_scope ::= * scope_push simple_statement scope_pop
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE scope_push statement_list scope_pop RIGHT_BRACE
          selection_rest_statement ::= statement_with_scope ELSE * statement_with_scope
    (217) scope_push ::= *

                    LEFT_BRACE shift  74
          statement_with_scope shift  187
 compound_statement_with_scope shift  208
                    scope_push shift  9
                     {default} reduce 217

State 67:
          statement_with_scope ::= * compound_statement_with_scope
          statement_with_scope ::= * scope_push simple_statement scope_pop
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE scope_push statement_list scope_pop RIGHT_BRACE
          iteration_statement ::= DO * statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
    (217) scope_push ::= *

                    LEFT_BRACE shift  74
          statement_with_scope shift  117
 compound_statement_with_scope shift  208
                    scope_push shift  9
                     {default} reduce 217

State 68:
          type_specifier ::= precision_qualifier * type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                        STRUCT shift  96
        type_specifier_no_prec shift  259
              struct_specifier shift  262

State 69:
          declaration ::= PRECISION precision_qualifier * type_specifier_no_prec SEMICOLON
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  280
                         FLOAT shift  279
                           INT shift  278
                          BOOL shift  277
                          VEC2 shift  276
                          VEC3 shift  275
                          VEC4 shift  274
                         BVEC2 shift  273
                         BVEC3 shift  272
                         BVEC4 shift  271
                         IVEC2 shift  270
                         IVEC3 shift  269
                         IVEC4 shift  268
                          MAT2 shift  267
                          MAT3 shift  266
                          MAT4 shift  265
                     TYPE_NAME shift  261
                     SAMPLER2D shift  264
                   SAMPLERCUBE shift  263
                        STRUCT shift  96
        type_specifier_no_prec shift  145
              struct_specifier shift  262

State 70:
          struct_declaration ::= type_specifier * struct_declarator_list SEMICOLON
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  143
        struct_declarator_list shift  95
             struct_declarator shift  250

State 71:
     (48) multiplicative_expression ::= unary_expression *
          assignment_expression ::= unary_expression * assignment_operator assignment_expression
          assignment_operator ::= * EQUAL
          assignment_operator ::= * MUL_ASSIGN
          assignment_operator ::= * DIV_ASSIGN
          assignment_operator ::= * MOD_ASSIGN
          assignment_operator ::= * ADD_ASSIGN
          assignment_operator ::= * SUB_ASSIGN
          assignment_operator ::= * LEFT_ASSIGN
          assignment_operator ::= * RIGHT_ASSIGN
          assignment_operator ::= * AND_ASSIGN
          assignment_operator ::= * XOR_ASSIGN
          assignment_operator ::= * OR_ASSIGN

                         EQUAL shift  303
                    MUL_ASSIGN shift  302
                    DIV_ASSIGN shift  301
                    MOD_ASSIGN shift  300
                    ADD_ASSIGN shift  299
                    SUB_ASSIGN shift  298
                   LEFT_ASSIGN shift  297
                  RIGHT_ASSIGN shift  296
                    AND_ASSIGN shift  295
                    XOR_ASSIGN shift  294
                     OR_ASSIGN shift  293
           assignment_operator shift  30
                     {default} reduce 48

State 72:
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_declarator
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT

                            IN shift  241
                           OUT shift  240
                         INOUT shift  239
           parameter_qualifier shift  57
                     {default} reduce 111

State 73:
          declaration ::= PRECISION * precision_qualifier type_specifier_no_prec SEMICOLON
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION

                HIGH_PRECISION shift  258
              MEDIUM_PRECISION shift  257
                 LOW_PRECISION shift  256
           precision_qualifier shift  69

State 74:
          compound_statement_with_scope ::= LEFT_BRACE * RIGHT_BRACE
          compound_statement_with_scope ::= LEFT_BRACE * scope_push statement_list scope_pop RIGHT_BRACE
    (217) scope_push ::= *

                   RIGHT_BRACE shift  202
                    scope_push shift  4
                     {default} reduce 217

State 75:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  143
             struct_declarator shift  252

State 76:
          compound_statement_pop_scope ::= * LEFT_BRACE scope_pop RIGHT_BRACE
          compound_statement_pop_scope ::= * LEFT_BRACE statement_list scope_pop RIGHT_BRACE
          function_definition ::= function_prototype scope_push * compound_statement_pop_scope

                    LEFT_BRACE shift  1
  compound_statement_pop_scope shift  186

State 77:
          declaration ::= function_prototype * SEMICOLON
          function_definition ::= function_prototype * scope_push compound_statement_pop_scope
    (217) scope_push ::= *

                     SEMICOLON shift  350
                    scope_push shift  76
                     {default} reduce 217

State 78:
          iteration_statement ::= FOR LEFT_PAREN * scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope
    (217) scope_push ::= *

                    scope_push shift  10
                     {default} reduce 217

State 79:
          statement_pop_scope ::= simple_statement * scope_pop
    (218) scope_pop ::= *

                     scope_pop shift  204
                     {default} reduce 218

State 80:
          iteration_statement ::= WHILE LEFT_PAREN * scope_push condition RIGHT_PAREN statement_pop_scope
    (217) scope_push ::= *

                    scope_push shift  12
                     {default} reduce 217

State 81:
          statement_with_scope ::= scope_push simple_statement * scope_pop
    (218) scope_pop ::= *

                     scope_pop shift  207
                     {default} reduce 218

State 82:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (65) equality_expression ::= equality_expression NE_OP relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 65

State 83:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (64) equality_expression ::= equality_expression EQ_OP relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 64

State 84:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (63) equality_expression ::= relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 63

State 85:
          postfix_expression ::= postfix_expression * LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression * DOT FIELD_SELECTION
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
     (40) unary_expression ::= postfix_expression *

                  LEFT_BRACKET shift  13
                           DOT shift  165
                        INC_OP shift  290
                        DEC_OP shift  289
                     {default} reduce 40

State 86:
          function_header ::= fully_specified_type IDENTIFIER * LEFT_PAREN
    (122) single_declaration ::= fully_specified_type IDENTIFIER *
          single_declaration ::= fully_specified_type IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type IDENTIFIER * EQUAL initializer

                    LEFT_PAREN shift  230
                  LEFT_BRACKET shift  24
                         EQUAL shift  19
                     {default} reduce 122

State 87:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (54) additive_expression ::= additive_expression DASH multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 54

State 88:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (53) additive_expression ::= additive_expression PLUS multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 53

State 89:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (52) additive_expression ::= multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 52

State 90:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression * RIGHT_PAREN SEMICOLON

                   RIGHT_PAREN shift  115
                         COMMA shift  32

State 91:
          expression ::= expression * COMMA assignment_expression
          jump_statement ::= RETURN expression * SEMICOLON

                         COMMA shift  32
                     SEMICOLON shift  197

State 92:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN expression * RIGHT_PAREN selection_rest_statement

                   RIGHT_PAREN shift  63
                         COMMA shift  32

State 93:
          single_declaration ::= INVARIANT * IDENTIFIER
          type_qualifier ::= INVARIANT * VARYING

                    IDENTIFIER shift  226
                       VARYING shift  233

State 94:
          parameter_declarator ::= type_specifier * IDENTIFIER
          parameter_declarator ::= type_specifier * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
    (115) parameter_type_specifier ::= type_specifier *
          parameter_type_specifier ::= type_specifier * LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  140
                  LEFT_BRACKET shift  25
                     {default} reduce 115

State 95:
          struct_declaration ::= type_specifier struct_declarator_list * SEMICOLON
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                         COMMA shift  75
                     SEMICOLON shift  253

State 96:
          struct_specifier ::= STRUCT * IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    IDENTIFIER shift  144
                    LEFT_BRACE shift  58

State 97:
    (118) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER *
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * EQUAL initializer

                  LEFT_BRACKET shift  28
                         EQUAL shift  20
                     {default} reduce 118

State 98:
          declaration ::= init_declarator_list * SEMICOLON
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER EQUAL initializer

                         COMMA shift  147
                     SEMICOLON shift  286

State 99:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMICOLON

                         COMMA shift  32
                     SEMICOLON shift  287

State 100:
          conditional_expression ::= logical_or_expression QUESTION expression * COLON assignment_expression
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  32
                         COLON shift  29

State 101:
          logical_or_expression ::= logical_or_expression * OR_OP logical_xor_expression
     (78) conditional_expression ::= logical_or_expression *
          conditional_expression ::= logical_or_expression * QUESTION expression COLON assignment_expression

                         OR_OP shift  33
                      QUESTION shift  21
                     {default} reduce 78

State 102:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (67) and_expression ::= and_expression AMPERSAND equality_expression *

                         EQ_OP shift  41
                         NE_OP shift  40
                     {default} reduce 67

State 103:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (66) and_expression ::= equality_expression *

                         EQ_OP shift  41
                         NE_OP shift  40
                     {default} reduce 66

State 104:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (62) relational_expression ::= relational_expression GE_OP shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 62

State 105:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (61) relational_expression ::= relational_expression LE_OP shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 61

State 106:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (60) relational_expression ::= relational_expression RIGHT_ANGLE shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 60

State 107:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (59) relational_expression ::= relational_expression LEFT_ANGLE shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 59

State 108:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (57) shift_expression ::= shift_expression RIGHT_OP additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 57

State 109:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (56) shift_expression ::= shift_expression LEFT_OP additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 56

State 110:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (58) relational_expression ::= shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 58

State 111:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (55) shift_expression ::= additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 55

State 112:
          function_call_generic ::= function_call_header_with_parameters * RIGHT_PAREN
          function_call_header_with_parameters ::= function_call_header_with_parameters * COMMA assignment_expression

                   RIGHT_PAREN shift  340
                         COMMA shift  31

State 113:
          primary_expression ::= LEFT_PAREN expression * RIGHT_PAREN
          expression ::= expression * COMMA assignment_expression

                   RIGHT_PAREN shift  345
                         COMMA shift  32

State 114:
          selection_rest_statement ::= statement_with_scope * ELSE statement_with_scope
    (193) selection_rest_statement ::= statement_with_scope *

                          ELSE shift  66
                          ELSE reduce 193 ** Parsing conflict **
                     {default} reduce 193

State 115:
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN * SEMICOLON

                     SEMICOLON shift  189

State 116:
          iteration_statement ::= DO statement_with_scope WHILE * LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                    LEFT_PAREN shift  15

State 117:
          iteration_statement ::= DO statement_with_scope * WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                         WHILE shift  116

State 118:
          expression ::= expression * COMMA assignment_expression
    (204) for_rest_statement ::= conditionopt SEMICOLON expression *

                         COMMA shift  32
                     {default} reduce 204

State 119:
          for_rest_statement ::= conditionopt * SEMICOLON
          for_rest_statement ::= conditionopt * SEMICOLON expression

                     SEMICOLON shift  16

State 120:
          jump_statement ::= DISCARD * SEMICOLON

                     SEMICOLON shift  195

State 121:
          jump_statement ::= BREAK * SEMICOLON

                     SEMICOLON shift  198

State 122:
          jump_statement ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  199

State 123:
          iteration_statement ::= FOR LEFT_PAREN scope_push for_init_statement for_rest_statement * RIGHT_PAREN statement_pop_scope

                   RIGHT_PAREN shift  7

State 124:
          iteration_statement ::= FOR * LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope

                    LEFT_PAREN shift  78

State 125:
          compound_statement_with_scope ::= LEFT_BRACE scope_push statement_list scope_pop * RIGHT_BRACE

                   RIGHT_BRACE shift  201

State 126:
          iteration_statement ::= WHILE LEFT_PAREN scope_push condition * RIGHT_PAREN statement_pop_scope

                   RIGHT_PAREN shift  8

State 127:
          condition ::= fully_specified_type IDENTIFIER * EQUAL initializer

                         EQUAL shift  17

State 128:
          condition ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  127

State 129:
          expression ::= expression * COMMA assignment_expression
    (194) condition ::= expression *

                         COMMA shift  32
                     {default} reduce 194

State 130:
          iteration_statement ::= WHILE * LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope

                    LEFT_PAREN shift  80

State 131:
          selection_statement ::= IF * LEFT_PAREN expression RIGHT_PAREN selection_rest_statement

                    LEFT_PAREN shift  18

State 132:
          compound_statement_pop_scope ::= LEFT_BRACE statement_list scope_pop * RIGHT_BRACE

                   RIGHT_BRACE shift  213

State 133:
          compound_statement_pop_scope ::= LEFT_BRACE scope_pop * RIGHT_BRACE

                   RIGHT_BRACE shift  214

State 134:
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  229

State 135:
          function_header ::= fully_specified_type * IDENTIFIER LEFT_PAREN
    (121) single_declaration ::= fully_specified_type *
          single_declaration ::= fully_specified_type * IDENTIFIER
          single_declaration ::= fully_specified_type * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  86
                     {default} reduce 121

State 136:
    (101) function_declarator ::= function_header_with_parameters *
          function_header_with_parameters ::= function_header_with_parameters * COMMA parameter_declaration

                         COMMA shift  65
                     {default} reduce 101

State 137:
          type_qualifier ::= INVARIANT * VARYING

                       VARYING shift  233

State 138:
          parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  244

State 139:
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  245

State 140:
    (105) parameter_declarator ::= type_specifier IDENTIFIER *
          parameter_declarator ::= type_specifier IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  26
                     {default} reduce 105

State 141:
          function_prototype ::= function_declarator * RIGHT_PAREN

                   RIGHT_PAREN shift  247

State 142:
          struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  251

State 143:
    (165) struct_declarator ::= IDENTIFIER *
          struct_declarator ::= IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  27
                     {default} reduce 165

State 144:
          struct_specifier ::= STRUCT IDENTIFIER * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    LEFT_BRACE shift  59

State 145:
          declaration ::= PRECISION precision_qualifier type_specifier_no_prec * SEMICOLON

                     SEMICOLON shift  281

State 146:
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  284

State 147:
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  97

State 148:
          declaration ::= function_prototype * SEMICOLON

                     SEMICOLON shift  350

State 149:
     (39) constructor_identifier ::= TYPE_NAME *
    (154) type_specifier_no_prec ::= TYPE_NAME *

                    LEFT_PAREN reduce 39
                     {default} reduce 154

State 150:
     (38) constructor_identifier ::= MAT4 *
    (150) type_specifier_no_prec ::= MAT4 *

                    LEFT_PAREN reduce 38
                     {default} reduce 150

State 151:
     (37) constructor_identifier ::= MAT3 *
    (149) type_specifier_no_prec ::= MAT3 *

                    LEFT_PAREN reduce 37
                     {default} reduce 149

State 152:
     (36) constructor_identifier ::= MAT2 *
    (148) type_specifier_no_prec ::= MAT2 *

                    LEFT_PAREN reduce 36
                     {default} reduce 148

State 153:
     (35) constructor_identifier ::= IVEC4 *
    (147) type_specifier_no_prec ::= IVEC4 *

                    LEFT_PAREN reduce 35
                     {default} reduce 147

State 154:
     (34) constructor_identifier ::= IVEC3 *
    (146) type_specifier_no_prec ::= IVEC3 *

                    LEFT_PAREN reduce 34
                     {default} reduce 146

State 155:
     (33) constructor_identifier ::= IVEC2 *
    (145) type_specifier_no_prec ::= IVEC2 *

                    LEFT_PAREN reduce 33
                     {default} reduce 145

State 156:
     (32) constructor_identifier ::= BVEC4 *
    (144) type_specifier_no_prec ::= BVEC4 *

                    LEFT_PAREN reduce 32
                     {default} reduce 144

State 157:
     (31) constructor_identifier ::= BVEC3 *
    (143) type_specifier_no_prec ::= BVEC3 *

                    LEFT_PAREN reduce 31
                     {default} reduce 143

State 158:
     (30) constructor_identifier ::= BVEC2 *
    (142) type_specifier_no_prec ::= BVEC2 *

                    LEFT_PAREN reduce 30
                     {default} reduce 142

State 159:
     (29) constructor_identifier ::= VEC4 *
    (141) type_specifier_no_prec ::= VEC4 *

                    LEFT_PAREN reduce 29
                     {default} reduce 141

State 160:
     (28) constructor_identifier ::= VEC3 *
    (140) type_specifier_no_prec ::= VEC3 *

                    LEFT_PAREN reduce 28
                     {default} reduce 140

State 161:
     (27) constructor_identifier ::= VEC2 *
    (139) type_specifier_no_prec ::= VEC2 *

                    LEFT_PAREN reduce 27
                     {default} reduce 139

State 162:
     (26) constructor_identifier ::= BOOL *
    (138) type_specifier_no_prec ::= BOOL *

                    LEFT_PAREN reduce 26
                     {default} reduce 138

State 163:
     (25) constructor_identifier ::= INT *
    (137) type_specifier_no_prec ::= INT *

                    LEFT_PAREN reduce 25
                     {default} reduce 137

State 164:
     (24) constructor_identifier ::= FLOAT *
    (136) type_specifier_no_prec ::= FLOAT *

                    LEFT_PAREN reduce 24
                     {default} reduce 136

State 165:
          postfix_expression ::= postfix_expression DOT * FIELD_SELECTION

               FIELD_SELECTION shift  291

State 166:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (77) logical_or_expression ::= logical_or_expression OR_OP logical_xor_expression *

                        XOR_OP shift  34
                     {default} reduce 77

State 167:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (75) logical_xor_expression ::= logical_xor_expression XOR_OP logical_and_expression *

                        AND_OP shift  35
                     {default} reduce 75

State 168:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (76) logical_or_expression ::= logical_xor_expression *

                        XOR_OP shift  34
                     {default} reduce 76

State 169:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (73) logical_and_expression ::= logical_and_expression AND_OP inclusive_or_expression *

                  VERTICAL_BAR shift  36
                     {default} reduce 73

State 170:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (74) logical_xor_expression ::= logical_and_expression *

                        AND_OP shift  35
                     {default} reduce 74

State 171:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (71) inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR exclusive_or_expression *

                         CARET shift  37
                     {default} reduce 71

State 172:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (72) logical_and_expression ::= inclusive_or_expression *

                  VERTICAL_BAR shift  36
                     {default} reduce 72

State 173:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (69) exclusive_or_expression ::= exclusive_or_expression CARET and_expression *

                     AMPERSAND shift  38
                     {default} reduce 69

State 174:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (70) inclusive_or_expression ::= exclusive_or_expression *

                         CARET shift  37
                     {default} reduce 70

State 175:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (68) exclusive_or_expression ::= and_expression *

                     AMPERSAND shift  38
                     {default} reduce 68

State 176:
          function_call_header ::= function_identifier * LEFT_PAREN

                    LEFT_PAREN shift  336

State 177:
          function_call_generic ::= function_call_header_no_parameters * RIGHT_PAREN

                   RIGHT_PAREN shift  339

State 178:
     (13) integer_expression ::= expression *
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  32
                     {default} reduce 13

State 179:
          postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  343

State 180:
      (1) variable_identifier ::= IDENTIFIER *
     (23) function_identifier ::= IDENTIFIER *

                    LEFT_PAREN reduce 23
                     {default} reduce 1

State 181:
    (210) translation_unit ::= external_declaration *

                     {default} reduce 210

State 182:
    (214) external_declaration ::= preprocessor_directive *

                     {default} reduce 214

State 183:
    (213) external_declaration ::= declaration *

                     {default} reduce 213

State 184:
    (212) external_declaration ::= function_definition *

                     {default} reduce 212

State 185:
    (211) translation_unit ::= translation_unit external_declaration *

                     {default} reduce 211

State 186:
    (215) function_definition ::= function_prototype scope_push compound_statement_pop_scope *

                     {default} reduce 215

State 187:
    (192) selection_rest_statement ::= statement_with_scope ELSE statement_with_scope *

                     {default} reduce 192

State 188:
    (191) selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement *

                     {default} reduce 191

State 189:
    (197) iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON *

                     {default} reduce 197

State 190:
    (187) statement_list ::= statement_no_new_scope *

                     {default} reduce 187

State 191:
    (200) for_init_statement ::= declaration_statement *

                     {default} reduce 200

State 192:
    (199) for_init_statement ::= expression_statement *

                     {default} reduce 199

State 193:
    (201) conditionopt ::= condition *

                     {default} reduce 201

State 194:
    (216) preprocessor_directive ::= PREPROCESSOR_DIRECTIVE *

                     {default} reduce 216

State 195:
    (209) jump_statement ::= DISCARD SEMICOLON *

                     {default} reduce 209

State 196:
    (207) jump_statement ::= RETURN SEMICOLON *

                     {default} reduce 207

State 197:
    (208) jump_statement ::= RETURN expression SEMICOLON *

                     {default} reduce 208

State 198:
    (206) jump_statement ::= BREAK SEMICOLON *

                     {default} reduce 206

State 199:
    (205) jump_statement ::= CONTINUE SEMICOLON *

                     {default} reduce 205

State 200:
    (198) iteration_statement ::= FOR LEFT_PAREN scope_push for_init_statement for_rest_statement RIGHT_PAREN statement_pop_scope *

                     {default} reduce 198

State 201:
    (182) compound_statement_with_scope ::= LEFT_BRACE scope_push statement_list scope_pop RIGHT_BRACE *

                     {default} reduce 182

State 202:
    (181) compound_statement_with_scope ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 181

State 203:
    (196) iteration_statement ::= WHILE LEFT_PAREN scope_push condition RIGHT_PAREN statement_pop_scope *

                     {default} reduce 196

State 204:
    (172) statement_pop_scope ::= simple_statement scope_pop *

                     {default} reduce 172

State 205:
    (171) statement_pop_scope ::= compound_statement_pop_scope *

                     {default} reduce 171

State 206:
    (195) condition ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 195

State 207:
    (170) statement_with_scope ::= scope_push simple_statement scope_pop *

                     {default} reduce 170

State 208:
    (169) statement_with_scope ::= compound_statement_with_scope *

                     {default} reduce 169

State 209:
    (189) expression_statement ::= SEMICOLON *

                     {default} reduce 189

State 210:
    (188) statement_list ::= statement_list statement_no_new_scope *

                     {default} reduce 188

State 211:
    (186) compound_statement_no_new_scope ::= LEFT_BRACE statement_list RIGHT_BRACE *

                     {default} reduce 186

State 212:
    (185) compound_statement_no_new_scope ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 185

State 213:
    (184) compound_statement_pop_scope ::= LEFT_BRACE statement_list scope_pop RIGHT_BRACE *

                     {default} reduce 184

State 214:
    (183) compound_statement_pop_scope ::= LEFT_BRACE scope_pop RIGHT_BRACE *

                     {default} reduce 183

State 215:
    (180) simple_statement ::= preprocessor_directive *

                     {default} reduce 180

State 216:
    (179) simple_statement ::= jump_statement *

                     {default} reduce 179

State 217:
    (178) simple_statement ::= iteration_statement *

                     {default} reduce 178

State 218:
    (177) simple_statement ::= selection_statement *

                     {default} reduce 177

State 219:
    (176) simple_statement ::= expression_statement *

                     {default} reduce 176

State 220:
    (175) simple_statement ::= declaration_statement *

                     {default} reduce 175

State 221:
    (174) statement_no_new_scope ::= simple_statement *

                     {default} reduce 174

State 222:
    (173) statement_no_new_scope ::= compound_statement_no_new_scope *

                     {default} reduce 173

State 223:
    (168) declaration_statement ::= declaration *

                     {default} reduce 168

State 224:
    (127) fully_specified_type ::= type_qualifier type_specifier *

                     {default} reduce 127

State 225:
    (126) fully_specified_type ::= type_specifier *

                     {default} reduce 126

State 226:
    (125) single_declaration ::= INVARIANT IDENTIFIER *

                     {default} reduce 125

State 227:
    (117) init_declarator_list ::= single_declaration *

                     {default} reduce 117

State 228:
    (124) single_declaration ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 124

State 229:
    (123) single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 123

State 230:
    (104) function_header ::= fully_specified_type IDENTIFIER LEFT_PAREN *

                     {default} reduce 104

State 231:
    (103) function_header_with_parameters ::= function_header_with_parameters COMMA parameter_declaration *

                     {default} reduce 103

State 232:
    (132) type_qualifier ::= UNIFORM *

                     {default} reduce 132

State 233:
    (131) type_qualifier ::= INVARIANT VARYING *

                     {default} reduce 131

State 234:
    (130) type_qualifier ::= VARYING *

                     {default} reduce 130

State 235:
    (129) type_qualifier ::= ATTRIBUTE *

                     {default} reduce 129

State 236:
    (128) type_qualifier ::= CONST *

                     {default} reduce 128

State 237:
    (110) parameter_declaration ::= parameter_qualifier parameter_type_specifier *

                     {default} reduce 110

State 238:
    (108) parameter_declaration ::= parameter_qualifier parameter_declarator *

                     {default} reduce 108

State 239:
    (114) parameter_qualifier ::= INOUT *

                     {default} reduce 114

State 240:
    (113) parameter_qualifier ::= OUT *

                     {default} reduce 113

State 241:
    (112) parameter_qualifier ::= IN *

                     {default} reduce 112

State 242:
    (109) parameter_declaration ::= type_qualifier parameter_qualifier parameter_type_specifier *

                     {default} reduce 109

State 243:
    (107) parameter_declaration ::= type_qualifier parameter_qualifier parameter_declarator *

                     {default} reduce 107

State 244:
    (116) parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 116

State 245:
    (106) parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 106

State 246:
    (102) function_header_with_parameters ::= function_header parameter_declaration *

                     {default} reduce 102

State 247:
     (99) function_prototype ::= function_declarator RIGHT_PAREN *

                     {default} reduce 99

State 248:
    (159) struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 159

State 249:
    (160) struct_declaration_list ::= struct_declaration *

                     {default} reduce 160

State 250:
    (163) struct_declarator_list ::= struct_declarator *

                     {default} reduce 163

State 251:
    (166) struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 166

State 252:
    (164) struct_declarator_list ::= struct_declarator_list COMMA struct_declarator *

                     {default} reduce 164

State 253:
    (162) struct_declaration ::= type_specifier struct_declarator_list SEMICOLON *

                     {default} reduce 162

State 254:
    (161) struct_declaration_list ::= struct_declaration_list struct_declaration *

                     {default} reduce 161

State 255:
    (158) struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 158

State 256:
    (157) precision_qualifier ::= LOW_PRECISION *

                     {default} reduce 157

State 257:
    (156) precision_qualifier ::= MEDIUM_PRECISION *

                     {default} reduce 156

State 258:
    (155) precision_qualifier ::= HIGH_PRECISION *

                     {default} reduce 155

State 259:
    (134) type_specifier ::= precision_qualifier type_specifier_no_prec *

                     {default} reduce 134

State 260:
    (133) type_specifier ::= type_specifier_no_prec *

                     {default} reduce 133

State 261:
    (154) type_specifier_no_prec ::= TYPE_NAME *

                     {default} reduce 154

State 262:
    (153) type_specifier_no_prec ::= struct_specifier *

                     {default} reduce 153

State 263:
    (152) type_specifier_no_prec ::= SAMPLERCUBE *

                     {default} reduce 152

State 264:
    (151) type_specifier_no_prec ::= SAMPLER2D *

                     {default} reduce 151

State 265:
    (150) type_specifier_no_prec ::= MAT4 *

                     {default} reduce 150

State 266:
    (149) type_specifier_no_prec ::= MAT3 *

                     {default} reduce 149

State 267:
    (148) type_specifier_no_prec ::= MAT2 *

                     {default} reduce 148

State 268:
    (147) type_specifier_no_prec ::= IVEC4 *

                     {default} reduce 147

State 269:
    (146) type_specifier_no_prec ::= IVEC3 *

                     {default} reduce 146

State 270:
    (145) type_specifier_no_prec ::= IVEC2 *

                     {default} reduce 145

State 271:
    (144) type_specifier_no_prec ::= BVEC4 *

                     {default} reduce 144

State 272:
    (143) type_specifier_no_prec ::= BVEC3 *

                     {default} reduce 143

State 273:
    (142) type_specifier_no_prec ::= BVEC2 *

                     {default} reduce 142

State 274:
    (141) type_specifier_no_prec ::= VEC4 *

                     {default} reduce 141

State 275:
    (140) type_specifier_no_prec ::= VEC3 *

                     {default} reduce 140

State 276:
    (139) type_specifier_no_prec ::= VEC2 *

                     {default} reduce 139

State 277:
    (138) type_specifier_no_prec ::= BOOL *

                     {default} reduce 138

State 278:
    (137) type_specifier_no_prec ::= INT *

                     {default} reduce 137

State 279:
    (136) type_specifier_no_prec ::= FLOAT *

                     {default} reduce 136

State 280:
    (135) type_specifier_no_prec ::= VOID *

                     {default} reduce 135

State 281:
     (98) declaration ::= PRECISION precision_qualifier type_specifier_no_prec SEMICOLON *

                     {default} reduce 98

State 282:
    (167) initializer ::= assignment_expression *

                     {default} reduce 167

State 283:
    (120) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL initializer *

                     {default} reduce 120

State 284:
    (119) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 119

State 285:
     (95) constant_expression ::= conditional_expression *

                     {default} reduce 95

State 286:
     (97) declaration ::= init_declarator_list SEMICOLON *

                     {default} reduce 97

State 287:
    (190) expression_statement ::= expression SEMICOLON *

                     {default} reduce 190

State 288:
     (94) expression ::= expression COMMA assignment_expression *

                     {default} reduce 94

State 289:
     (12) postfix_expression ::= postfix_expression DEC_OP *

                     {default} reduce 12

State 290:
     (11) postfix_expression ::= postfix_expression INC_OP *

                     {default} reduce 11

State 291:
     (10) postfix_expression ::= postfix_expression DOT FIELD_SELECTION *

                     {default} reduce 10

State 292:
     (20) function_call_header_with_parameters ::= function_call_header_with_parameters COMMA assignment_expression *

                     {default} reduce 20

State 293:
     (92) assignment_operator ::= OR_ASSIGN *

                     {default} reduce 92

State 294:
     (91) assignment_operator ::= XOR_ASSIGN *

                     {default} reduce 91

State 295:
     (90) assignment_operator ::= AND_ASSIGN *

                     {default} reduce 90

State 296:
     (89) assignment_operator ::= RIGHT_ASSIGN *

                     {default} reduce 89

State 297:
     (88) assignment_operator ::= LEFT_ASSIGN *

                     {default} reduce 88

State 298:
     (87) assignment_operator ::= SUB_ASSIGN *

                     {default} reduce 87

State 299:
     (86) assignment_operator ::= ADD_ASSIGN *

                     {default} reduce 86

State 300:
     (85) assignment_operator ::= MOD_ASSIGN *

                     {default} reduce 85

State 301:
     (84) assignment_operator ::= DIV_ASSIGN *

                     {default} reduce 84

State 302:
     (83) assignment_operator ::= MUL_ASSIGN *

                     {default} reduce 83

State 303:
     (82) assignment_operator ::= EQUAL *

                     {default} reduce 82

State 304:
     (81) assignment_expression ::= unary_expression assignment_operator assignment_expression *

                     {default} reduce 81

State 305:
     (93) expression ::= assignment_expression *

                     {default} reduce 93

State 306:
     (80) assignment_expression ::= conditional_expression *

                     {default} reduce 80

State 307:
     (79) conditional_expression ::= logical_or_expression QUESTION expression COLON assignment_expression *

                     {default} reduce 79

State 308:
     (48) multiplicative_expression ::= unary_expression *

                     {default} reduce 48

State 309:
     (51) multiplicative_expression ::= multiplicative_expression PERCENT unary_expression *

                     {default} reduce 51

State 310:
     (50) multiplicative_expression ::= multiplicative_expression SLASH unary_expression *

                     {default} reduce 50

State 311:
     (49) multiplicative_expression ::= multiplicative_expression STAR unary_expression *

                     {default} reduce 49

State 312:
     (47) unary_operator ::= TILDE *

                     {default} reduce 47

State 313:
     (46) unary_operator ::= BANG *

                     {default} reduce 46

State 314:
     (45) unary_operator ::= DASH *

                     {default} reduce 45

State 315:
     (44) unary_operator ::= PLUS *

                     {default} reduce 44

State 316:
     (43) unary_expression ::= unary_operator unary_expression *

                     {default} reduce 43

State 317:
     (42) unary_expression ::= DEC_OP unary_expression *

                     {default} reduce 42

State 318:
     (41) unary_expression ::= INC_OP unary_expression *

                     {default} reduce 41

State 319:
     (39) constructor_identifier ::= TYPE_NAME *

                     {default} reduce 39

State 320:
     (38) constructor_identifier ::= MAT4 *

                     {default} reduce 38

State 321:
     (37) constructor_identifier ::= MAT3 *

                     {default} reduce 37

State 322:
     (36) constructor_identifier ::= MAT2 *

                     {default} reduce 36

State 323:
     (35) constructor_identifier ::= IVEC4 *

                     {default} reduce 35

State 324:
     (34) constructor_identifier ::= IVEC3 *

                     {default} reduce 34

State 325:
     (33) constructor_identifier ::= IVEC2 *

                     {default} reduce 33

State 326:
     (32) constructor_identifier ::= BVEC4 *

                     {default} reduce 32

State 327:
     (31) constructor_identifier ::= BVEC3 *

                     {default} reduce 31

State 328:
     (30) constructor_identifier ::= BVEC2 *

                     {default} reduce 30

State 329:
     (29) constructor_identifier ::= VEC4 *

                     {default} reduce 29

State 330:
     (28) constructor_identifier ::= VEC3 *

                     {default} reduce 28

State 331:
     (27) constructor_identifier ::= VEC2 *

                     {default} reduce 27

State 332:
     (26) constructor_identifier ::= BOOL *

                     {default} reduce 26

State 333:
     (25) constructor_identifier ::= INT *

                     {default} reduce 25

State 334:
     (24) constructor_identifier ::= FLOAT *

                     {default} reduce 24

State 335:
     (22) function_identifier ::= constructor_identifier *

                     {default} reduce 22

State 336:
     (21) function_call_header ::= function_identifier LEFT_PAREN *

                     {default} reduce 21

State 337:
     (19) function_call_header_with_parameters ::= function_call_header assignment_expression *

                     {default} reduce 19

State 338:
     (17) function_call_header_no_parameters ::= function_call_header VOID *

                     {default} reduce 17

State 339:
     (16) function_call_generic ::= function_call_header_no_parameters RIGHT_PAREN *

                     {default} reduce 16

State 340:
     (15) function_call_generic ::= function_call_header_with_parameters RIGHT_PAREN *

                     {default} reduce 15

State 341:
     (14) function_call ::= function_call_generic *

                     {default} reduce 14

State 342:
      (9) postfix_expression ::= function_call *

                     {default} reduce 9

State 343:
      (8) postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET *

                     {default} reduce 8

State 344:
      (7) postfix_expression ::= primary_expression *

                     {default} reduce 7

State 345:
      (6) primary_expression ::= LEFT_PAREN expression RIGHT_PAREN *

                     {default} reduce 6

State 346:
      (5) primary_expression ::= BOOLCONSTANT *

                     {default} reduce 5

State 347:
      (4) primary_expression ::= FLOATCONSTANT *

                     {default} reduce 4

State 348:
      (3) primary_expression ::= INTCONSTANT *

                     {default} reduce 3

State 349:
      (2) primary_expression ::= variable_identifier *

                     {default} reduce 2

State 350:
     (96) declaration ::= function_prototype SEMICOLON *

                     {default} reduce 96

----------------------------------------------------
Symbols:
    0: $:
    1: IDENTIFIER
    2: INTCONSTANT
    3: FLOATCONSTANT
    4: BOOLCONSTANT
    5: LEFT_PAREN
    6: RIGHT_PAREN
    7: LEFT_BRACKET
    8: RIGHT_BRACKET
    9: DOT
   10: FIELD_SELECTION
   11: INC_OP
   12: DEC_OP
   13: VOID
   14: COMMA
   15: FLOAT
   16: INT
   17: BOOL
   18: VEC2
   19: VEC3
   20: VEC4
   21: BVEC2
   22: BVEC3
   23: BVEC4
   24: IVEC2
   25: IVEC3
   26: IVEC4
   27: MAT2
   28: MAT3
   29: MAT4
   30: TYPE_NAME
   31: PLUS
   32: DASH
   33: BANG
   34: TILDE
   35: STAR
   36: SLASH
   37: PERCENT
   38: LEFT_OP
   39: RIGHT_OP
   40: LEFT_ANGLE
   41: RIGHT_ANGLE
   42: LE_OP
   43: GE_OP
   44: EQ_OP
   45: NE_OP
   46: AMPERSAND
   47: CARET
   48: VERTICAL_BAR
   49: AND_OP
   50: XOR_OP
   51: OR_OP
   52: QUESTION
   53: COLON
   54: EQUAL
   55: MUL_ASSIGN
   56: DIV_ASSIGN
   57: MOD_ASSIGN
   58: ADD_ASSIGN
   59: SUB_ASSIGN
   60: LEFT_ASSIGN
   61: RIGHT_ASSIGN
   62: AND_ASSIGN
   63: XOR_ASSIGN
   64: OR_ASSIGN
   65: SEMICOLON
   66: PRECISION
   67: IN
   68: OUT
   69: INOUT
   70: INVARIANT
   71: CONST
   72: ATTRIBUTE
   73: VARYING
   74: UNIFORM
   75: SAMPLER2D
   76: SAMPLERCUBE
   77: HIGH_PRECISION
   78: MEDIUM_PRECISION
   79: LOW_PRECISION
   80: STRUCT
   81: LEFT_BRACE
   82: RIGHT_BRACE
   83: IF
   84: ELSE
   85: WHILE
   86: DO
   87: FOR
   88: CONTINUE
   89: BREAK
   90: RETURN
   91: DISCARD
   92: PREPROCESSOR_DIRECTIVE
   93: error:
   94: root: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   95: translation_unit: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   96: variable_identifier: IDENTIFIER
   97: primary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN
   98: expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
   99: postfix_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  100: integer_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  101: function_call: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  102: function_call_generic: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  103: function_call_header_with_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  104: function_call_header_no_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  105: function_call_header: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  106: assignment_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  107: function_identifier: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  108: constructor_identifier: FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  109: unary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  110: unary_operator: PLUS DASH BANG TILDE
  111: multiplicative_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  112: additive_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  113: shift_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  114: relational_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  115: equality_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  116: and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  117: exclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  118: inclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  119: logical_and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  120: logical_xor_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  121: logical_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  122: conditional_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  123: assignment_operator: EQUAL MUL_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
  124: constant_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  125: declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  126: function_prototype: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  127: init_declarator_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  128: precision_qualifier: HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION
  129: type_specifier_no_prec: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE STRUCT
  130: function_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  131: function_header: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  132: function_header_with_parameters: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  133: parameter_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME IN OUT INOUT INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  134: fully_specified_type: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  135: parameter_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  136: type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  137: type_qualifier: INVARIANT CONST ATTRIBUTE VARYING UNIFORM
  138: parameter_qualifier: <lambda> IN OUT INOUT
  139: parameter_type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  140: single_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  141: initializer: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  142: struct_specifier: STRUCT
  143: struct_declaration_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  144: struct_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  145: struct_declarator_list: IDENTIFIER
  146: struct_declarator: IDENTIFIER
  147: declaration_statement: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  148: statement_with_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  149: compound_statement_with_scope: LEFT_BRACE
  150: scope_push: <lambda>
  151: simple_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  152: scope_pop: <lambda>
  153: statement_pop_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  154: compound_statement_pop_scope: LEFT_BRACE
  155: statement_no_new_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  156: compound_statement_no_new_scope: LEFT_BRACE
  157: expression_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON
  158: selection_statement: IF
  159: iteration_statement: WHILE DO FOR
  160: jump_statement: CONTINUE BREAK RETURN DISCARD
  161: preprocessor_directive: PREPROCESSOR_DIRECTIVE
  162: statement_list: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  163: selection_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  164: condition: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  165: for_init_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  166: for_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  167: conditionopt: <lambda> IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  168: external_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
  169: function_definition: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
