/*
	Tables

	Parser tables generated by lemon parser generator

	::grammar_name::

	Haxe port:
	@author George Corney
*/

package glsl.parse;

typedef TokenType = $$defaultTo(token_type, Int);

class Tables{
	static public var ignoredTokens:Array<TokenType> = [WHITESPACE, LINE_COMMENT, BLOCK_COMMENT];

	static public inline var errorRecovery:Bool = ::error_recovery::; //true when %syntax_error is used, this requires and ERROR token in the grammar

	//consts
	static public inline var illegalSymbolNumber:Int = ::YYNOCODE::;

	static public inline var nStates = ::YYNSTATE::; //total number of states
	static public inline var nRules = ::YYNRULE::; //total number of rules

	//tables
/* ###### ACTION ###### */
	static public inline var actionCount:Int = ::YY_ACTTAB_COUNT::; //YY_ACTTAB_COUNT
	static public var action:Array<Int> = ::yy_action::;

/* ###### LOOKAHEAD ###### */
	static public var lookahead:Array<Int> = ::yy_lookahead::;

/* ###### SHIFT OFFSET ###### */
	static public inline var shiftUseDefault = ::YY_SHIFT_USE_DFLT::;
	static public inline var shiftCount = ::YY_SHIFT_COUNT::;
	static public inline var shiftOffsetMin = ::YY_SHIFT_MIN::;
	static public inline var shiftOffsetMax = ::YY_SHIFT_MAX::;
	static public var shiftOffset:Array<Int> = ::yy_shift_ofst::;
	
/* ###### REDUCE OFFSET ###### */
	static public inline var reduceUseDefault = ::YY_REDUCE_USE_DFLT::;
	static public inline var reduceCount = ::YY_REDUCE_COUNT::;
	static public inline var reduceMin = ::YY_REDUCE_MIN::;
	static public inline var reduceMax = ::YY_REDUCE_MAX::;
	static public var reduceOffset:Array<Int> = ::yy_reduce_ofst::;

/* ###### DEFAULT ACTION ###### */
	static public var defaultAction:Array<Int> = ::yy_default::;

	//format: [Symbol on the left-hand side of the rule, Number of right-hand side symbols in the rule]
	static public var ruleInfo:Array<Array<Int>> = ::yy_rule_info::;

	static public var tokenIdMap:Map<TokenType, Int> = $$printEnumMap(tokens);
}