State 0:
          root ::= * translation_unit
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype compound_statement_no_new_scope
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
        PREPROCESSOR_DIRECTIVE shift  181
                          root accept
              translation_unit shift  39
                   declaration shift  171
            function_prototype shift  71
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
        preprocessor_directive shift  170
          external_declaration shift  169
           function_definition shift  172

State 1:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= LEFT_BRACE * RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_with_scope ::= LEFT_BRACE * statement_list RIGHT_BRACE
          statement_list ::= * statement_no_new_scope
          statement_list ::= * statement_list statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                   RIGHT_BRACE shift  198
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  177
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199
                statement_list shift  5

State 2:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE * RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE * statement_list RIGHT_BRACE
          statement_list ::= * statement_no_new_scope
          statement_list ::= * statement_list statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                   RIGHT_BRACE shift  176
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  177
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199
                statement_list shift  4

State 3:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          statement_with_scope ::= * compound_statement_no_new_scope
          statement_with_scope ::= * simple_statement
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN * selection_rest_statement
          selection_rest_statement ::= * statement_with_scope ELSE statement_with_scope
          selection_rest_statement ::= * statement_with_scope
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  2
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
              simple_statement shift  193
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199
          statement_with_scope shift  120
compound_statement_no_new_scope shift  194
      selection_rest_statement shift  192

State 4:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_no_new_scope ::= LEFT_BRACE statement_list * RIGHT_BRACE
          statement_list ::= statement_list * statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                   RIGHT_BRACE shift  175
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  196
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199

State 5:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          compound_statement_with_scope ::= LEFT_BRACE statement_list * RIGHT_BRACE
          statement_list ::= statement_list * statement_no_new_scope
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                   RIGHT_BRACE shift  197
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  196
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199

State 6:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN * statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  187
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199

State 7:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          statement_with_scope ::= * compound_statement_no_new_scope
          statement_with_scope ::= * simple_statement
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= DO * statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  2
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
              simple_statement shift  193
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199
          statement_with_scope shift  114
compound_statement_no_new_scope shift  194

State 8:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          statement_no_new_scope ::= * compound_statement_with_scope
          statement_no_new_scope ::= * simple_statement
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          compound_statement_with_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_with_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= WHILE LEFT_PAREN condition RIGHT_PAREN * statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  1
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
        statement_no_new_scope shift  189
 compound_statement_with_scope shift  206
              simple_statement shift  205
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199

State 9:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          simple_statement ::= * declaration_statement
          simple_statement ::= * expression_statement
          simple_statement ::= * selection_statement
          simple_statement ::= * iteration_statement
          simple_statement ::= * jump_statement
          simple_statement ::= * preprocessor_directive
          statement_with_scope ::= * compound_statement_no_new_scope
          statement_with_scope ::= * simple_statement
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          selection_statement ::= * IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
          selection_rest_statement ::= statement_with_scope ELSE * statement_with_scope
          iteration_statement ::= * WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope
          iteration_statement ::= * DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
          iteration_statement ::= * FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          jump_statement ::= * DISCARD SEMICOLON
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                    LEFT_BRACE shift  2
                            IF shift  121
                         WHILE shift  119
                            DO shift  7
                           FOR shift  111
                      CONTINUE shift  109
                         BREAK shift  108
                        RETURN shift  14
                       DISCARD shift  107
        PREPROCESSOR_DIRECTIVE shift  181
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  204
              simple_statement shift  193
          expression_statement shift  203
           selection_statement shift  202
           iteration_statement shift  201
                jump_statement shift  200
        preprocessor_directive shift  199
          statement_with_scope shift  191
compound_statement_no_new_scope shift  194

State 10:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          declaration_statement ::= * declaration
          expression_statement ::= * SEMICOLON
          expression_statement ::= * expression SEMICOLON
          iteration_statement ::= FOR LEFT_PAREN * for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
          for_init_statement ::= * expression_statement
          for_init_statement ::= * declaration_statement

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  195
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  90
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   declaration shift  207
            function_prototype shift  136
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
         declaration_statement shift  178
          expression_statement shift  179
            for_init_statement shift  11

State 11:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= FOR LEFT_PAREN for_init_statement * for_rest_statement RIGHT_PAREN statement_no_new_scope
          conditionopt ::= * condition
    (198) conditionopt ::= *
          for_rest_statement ::= * conditionopt SEMICOLON
          for_rest_statement ::= * conditionopt SEMICOLON expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     INVARIANT shift  125
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  118
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
          fully_specified_type shift  117
                type_specifier shift  209
                type_qualifier shift  62
              struct_specifier shift  246
                     condition shift  180
            for_rest_statement shift  110
                  conditionopt shift  106
                     {default} reduce 198

State 12:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          condition ::= * expression
          condition ::= * fully_specified_type IDENTIFIER EQUAL initializer
          iteration_statement ::= WHILE LEFT_PAREN * condition RIGHT_PAREN statement_no_new_scope

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  264
                         FLOAT shift  152
                           INT shift  151
                          BOOL shift  150
                          VEC2 shift  149
                          VEC3 shift  148
                          VEC4 shift  147
                         BVEC2 shift  146
                         BVEC3 shift  145
                         BVEC4 shift  144
                         IVEC2 shift  143
                         IVEC3 shift  142
                         IVEC4 shift  141
                          MAT2 shift  140
                          MAT3 shift  139
                          MAT4 shift  138
                     TYPE_NAME shift  137
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     INVARIANT shift  125
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  118
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
          fully_specified_type shift  117
                type_specifier shift  209
                type_qualifier shift  62
              struct_specifier shift  246
                     condition shift  115

State 13:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression LEFT_BRACKET * integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          integer_expression ::= * expression
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  166
            postfix_expression shift  76
            integer_expression shift  167
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 14:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= RETURN * SEMICOLON
          jump_statement ::= RETURN * expression SEMICOLON

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
                     SEMICOLON shift  183
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  81
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 15:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
    (199) for_rest_statement ::= conditionopt SEMICOLON *
          for_rest_statement ::= conditionopt SEMICOLON * expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  105
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                     {default} reduce 199

State 16:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN * expression RIGHT_PAREN SEMICOLON

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  82
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 17:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          condition ::= fully_specified_type IDENTIFIER EQUAL * initializer

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  266
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   initializer shift  190

State 18:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN * expression RIGHT_PAREN selection_rest_statement

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  83
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 19:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          single_declaration ::= fully_specified_type IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  266
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   initializer shift  212

State 20:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL * initializer
          initializer ::= * assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  266
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                   initializer shift  267

State 21:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION * expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  91
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 22:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          primary_expression ::= LEFT_PAREN * expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
                    expression shift  104
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  289
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 23:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= function_call_header * VOID
          function_call_header_no_parameters ::= * function_call_header
     (18) function_call_header_no_parameters ::= function_call_header *
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= function_call_header * assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                          VOID shift  322
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  321
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290
                     {default} reduce 18

State 24:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  269
           constant_expression shift  122

State 25:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_type_specifier ::= type_specifier LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  269
           constant_expression shift  126

State 26:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  269
           constant_expression shift  127

State 27:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          struct_declarator ::= IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  269
           constant_expression shift  130

State 28:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          constant_expression ::= * conditional_expression
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET * constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  269
           constant_expression shift  134

State 29:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          conditional_expression ::= logical_or_expression QUESTION expression COLON * assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  291
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 30:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  288
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 31:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header_with_parameters ::= function_call_header_with_parameters COMMA * assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  276
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 32:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= * logical_xor_expression
          logical_or_expression ::= * logical_or_expression OR_OP logical_xor_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON assignment_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
         assignment_expression shift  272
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  68
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  156
         logical_or_expression shift  92
        conditional_expression shift  290

State 33:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= * logical_and_expression
          logical_xor_expression ::= * logical_xor_expression XOR_OP logical_and_expression
          logical_or_expression ::= logical_or_expression OR_OP * logical_xor_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  158
        logical_xor_expression shift  154

State 34:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression AND_OP inclusive_or_expression
          logical_xor_expression ::= logical_xor_expression XOR_OP * logical_and_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  160
        logical_and_expression shift  155

State 35:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression VERTICAL_BAR exclusive_or_expression
          logical_and_expression ::= logical_and_expression AND_OP * inclusive_or_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  162
       inclusive_or_expression shift  157

State 36:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression CARET and_expression
          inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR * exclusive_or_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  163
       exclusive_or_expression shift  159

State 37:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AMPERSAND equality_expression
          exclusive_or_expression ::= exclusive_or_expression CARET * and_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  94
                and_expression shift  161

State 38:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQ_OP relational_expression
          equality_expression ::= * equality_expression NE_OP relational_expression
          and_expression ::= and_expression AMPERSAND * equality_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  75
           equality_expression shift  93

State 39:
      (0) root ::= translation_unit *
          declaration ::= * function_prototype SEMICOLON
          declaration ::= * init_declarator_list SEMICOLON
          declaration ::= * PRECISION precision_qualifier type_specifier_no_prec SEMICOLON
          function_prototype ::= * function_declarator RIGHT_PAREN
          function_declarator ::= * function_header
          function_declarator ::= * function_header_with_parameters
          function_header_with_parameters ::= * function_header parameter_declaration
          function_header_with_parameters ::= * function_header_with_parameters COMMA parameter_declaration
          function_header ::= * fully_specified_type IDENTIFIER LEFT_PAREN
          init_declarator_list ::= * single_declaration
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= * init_declarator_list COMMA IDENTIFIER EQUAL initializer
          single_declaration ::= * fully_specified_type
          single_declaration ::= * fully_specified_type IDENTIFIER
          single_declaration ::= * fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= * fully_specified_type IDENTIFIER EQUAL initializer
          single_declaration ::= * INVARIANT IDENTIFIER
          fully_specified_type ::= * type_specifier
          fully_specified_type ::= * type_qualifier type_specifier
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration ::= * preprocessor_directive
          function_definition ::= * function_prototype compound_statement_no_new_scope
          preprocessor_directive ::= * PREPROCESSOR_DIRECTIVE

                             $ reduce 0
                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     PRECISION shift  70
                     INVARIANT shift  84
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
        PREPROCESSOR_DIRECTIVE shift  181
                   declaration shift  171
            function_prototype shift  71
          init_declarator_list shift  89
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
           function_declarator shift  129
               function_header shift  63
function_header_with_parameters shift  124
          fully_specified_type shift  123
                type_specifier shift  209
                type_qualifier shift  62
            single_declaration shift  211
              struct_specifier shift  246
        preprocessor_directive shift  170
          external_declaration shift  173
           function_definition shift  172

State 40:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression NE_OP * relational_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  73

State 41:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LEFT_ANGLE shift_expression
          relational_expression ::= * relational_expression RIGHT_ANGLE shift_expression
          relational_expression ::= * relational_expression LE_OP shift_expression
          relational_expression ::= * relational_expression GE_OP shift_expression
          equality_expression ::= equality_expression EQ_OP * relational_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  101
         relational_expression shift  74

State 42:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression GE_OP * shift_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  95

State 43:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LE_OP * shift_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  96

State 44:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression RIGHT_ANGLE * shift_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  97

State 45:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression LEFT_OP additive_expression
          shift_expression ::= * shift_expression RIGHT_OP additive_expression
          relational_expression ::= relational_expression LEFT_ANGLE * shift_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  102
              shift_expression shift  98

State 46:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression RIGHT_OP * additive_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  99

State 47:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression PLUS multiplicative_expression
          additive_expression ::= * additive_expression DASH multiplicative_expression
          shift_expression ::= shift_expression LEFT_OP * additive_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  80
           additive_expression shift  100

State 48:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression DASH * multiplicative_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  78

State 49:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= * unary_expression
          multiplicative_expression ::= * multiplicative_expression STAR unary_expression
          multiplicative_expression ::= * multiplicative_expression SLASH unary_expression
          multiplicative_expression ::= * multiplicative_expression PERCENT unary_expression
          additive_expression ::= additive_expression PLUS * multiplicative_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  292
                unary_operator shift  53
     multiplicative_expression shift  79

State 50:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression PERCENT * unary_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  293
                unary_operator shift  53

State 51:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression SLASH * unary_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  294
                unary_operator shift  53

State 52:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE
          multiplicative_expression ::= multiplicative_expression STAR * unary_expression

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  295
                unary_operator shift  53

State 53:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_expression ::= unary_operator * unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  300
                unary_operator shift  53

State 54:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  301
                unary_operator shift  53

State 55:
          variable_identifier ::= * IDENTIFIER
          primary_expression ::= * variable_identifier
          primary_expression ::= * INTCONSTANT
          primary_expression ::= * FLOATCONSTANT
          primary_expression ::= * BOOLCONSTANT
          primary_expression ::= * LEFT_PAREN expression RIGHT_PAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= * function_call
          postfix_expression ::= * postfix_expression DOT FIELD_SELECTION
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          function_call ::= * function_call_generic
          function_call_generic ::= * function_call_header_with_parameters RIGHT_PAREN
          function_call_generic ::= * function_call_header_no_parameters RIGHT_PAREN
          function_call_header_no_parameters ::= * function_call_header VOID
          function_call_header_no_parameters ::= * function_call_header
          function_call_header_with_parameters ::= * function_call_header assignment_expression
          function_call_header_with_parameters ::= * function_call_header_with_parameters COMMA assignment_expression
          function_call_header ::= * function_identifier LEFT_PAREN
          function_identifier ::= * constructor_identifier
          function_identifier ::= * IDENTIFIER
          constructor_identifier ::= * FLOAT
          constructor_identifier ::= * INT
          constructor_identifier ::= * BOOL
          constructor_identifier ::= * VEC2
          constructor_identifier ::= * VEC3
          constructor_identifier ::= * VEC4
          constructor_identifier ::= * BVEC2
          constructor_identifier ::= * BVEC3
          constructor_identifier ::= * BVEC4
          constructor_identifier ::= * IVEC2
          constructor_identifier ::= * IVEC3
          constructor_identifier ::= * IVEC4
          constructor_identifier ::= * MAT2
          constructor_identifier ::= * MAT3
          constructor_identifier ::= * MAT4
          constructor_identifier ::= * TYPE_NAME
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator unary_expression
          unary_operator ::= * PLUS
          unary_operator ::= * DASH
          unary_operator ::= * BANG
          unary_operator ::= * TILDE

                    IDENTIFIER shift  168
                   INTCONSTANT shift  332
                 FLOATCONSTANT shift  331
                  BOOLCONSTANT shift  330
                    LEFT_PAREN shift  22
                        INC_OP shift  55
                        DEC_OP shift  54
                         FLOAT shift  318
                           INT shift  317
                          BOOL shift  316
                          VEC2 shift  315
                          VEC3 shift  314
                          VEC4 shift  313
                         BVEC2 shift  312
                         BVEC3 shift  311
                         BVEC4 shift  310
                         IVEC2 shift  309
                         IVEC3 shift  308
                         IVEC4 shift  307
                          MAT2 shift  306
                          MAT3 shift  305
                          MAT4 shift  304
                     TYPE_NAME shift  303
                          PLUS shift  299
                          DASH shift  298
                          BANG shift  297
                         TILDE shift  296
           variable_identifier shift  333
            primary_expression shift  328
            postfix_expression shift  76
                 function_call shift  326
         function_call_generic shift  325
function_call_header_with_parameters shift  103
function_call_header_no_parameters shift  165
          function_call_header shift  23
           function_identifier shift  164
        constructor_identifier shift  319
              unary_expression shift  302
                unary_operator shift  53

State 56:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= parameter_qualifier * parameter_declarator
          parameter_declaration ::= parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
          parameter_declarator shift  222
                type_specifier shift  85
      parameter_type_specifier shift  221
              struct_specifier shift  246

State 57:
          parameter_declarator ::= * type_specifier IDENTIFIER
          parameter_declarator ::= * type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_declarator
          parameter_declaration ::= type_qualifier parameter_qualifier * parameter_type_specifier
          parameter_type_specifier ::= * type_specifier
          parameter_type_specifier ::= * type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
          parameter_declarator shift  227
                type_specifier shift  85
      parameter_type_specifier shift  226
              struct_specifier shift  246

State 58:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
                type_specifier shift  67
              struct_specifier shift  246
       struct_declaration_list shift  60
            struct_declaration shift  233

State 59:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE * struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
                type_specifier shift  67
              struct_specifier shift  246
       struct_declaration_list shift  61
            struct_declaration shift  233

State 60:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                   RIGHT_BRACE shift  232
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
                type_specifier shift  67
              struct_specifier shift  246
            struct_declaration shift  238

State 61:
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list * RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * type_specifier struct_declarator_list SEMICOLON

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
                   RIGHT_BRACE shift  239
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
                type_specifier shift  67
              struct_specifier shift  246
            struct_declaration shift  238

State 62:
          fully_specified_type ::= type_qualifier * type_specifier
          type_specifier ::= * type_specifier_no_prec
          type_specifier ::= * precision_qualifier type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
                        STRUCT shift  87
           precision_qualifier shift  65
        type_specifier_no_prec shift  244
                type_specifier shift  208
              struct_specifier shift  246

State 63:
    (100) function_declarator ::= function_header *
          function_header_with_parameters ::= function_header * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                   RIGHT_PAREN reduce 100
                            IN shift  225
                           OUT shift  224
                         INOUT shift  223
                     INVARIANT shift  125
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
         parameter_declaration shift  230
                type_qualifier shift  69
           parameter_qualifier shift  56
                     {default} reduce 111

State 64:
          function_header_with_parameters ::= function_header_with_parameters COMMA * parameter_declaration
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_declarator
          parameter_declaration ::= * parameter_qualifier parameter_declarator
          parameter_declaration ::= * type_qualifier parameter_qualifier parameter_type_specifier
          parameter_declaration ::= * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT
          type_qualifier ::= * CONST
          type_qualifier ::= * ATTRIBUTE
          type_qualifier ::= * VARYING
          type_qualifier ::= * INVARIANT VARYING
          type_qualifier ::= * UNIFORM

                            IN shift  225
                           OUT shift  224
                         INOUT shift  223
                     INVARIANT shift  125
                         CONST shift  220
                     ATTRIBUTE shift  219
                       VARYING shift  218
                       UNIFORM shift  216
         parameter_declaration shift  215
                type_qualifier shift  69
           parameter_qualifier shift  56
                     {default} reduce 111

State 65:
          type_specifier ::= precision_qualifier * type_specifier_no_prec
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                        STRUCT shift  87
        type_specifier_no_prec shift  243
              struct_specifier shift  246

State 66:
          declaration ::= PRECISION precision_qualifier * type_specifier_no_prec SEMICOLON
          type_specifier_no_prec ::= * VOID
          type_specifier_no_prec ::= * FLOAT
          type_specifier_no_prec ::= * INT
          type_specifier_no_prec ::= * BOOL
          type_specifier_no_prec ::= * VEC2
          type_specifier_no_prec ::= * VEC3
          type_specifier_no_prec ::= * VEC4
          type_specifier_no_prec ::= * BVEC2
          type_specifier_no_prec ::= * BVEC3
          type_specifier_no_prec ::= * BVEC4
          type_specifier_no_prec ::= * IVEC2
          type_specifier_no_prec ::= * IVEC3
          type_specifier_no_prec ::= * IVEC4
          type_specifier_no_prec ::= * MAT2
          type_specifier_no_prec ::= * MAT3
          type_specifier_no_prec ::= * MAT4
          type_specifier_no_prec ::= * SAMPLER2D
          type_specifier_no_prec ::= * SAMPLERCUBE
          type_specifier_no_prec ::= * struct_specifier
          type_specifier_no_prec ::= * TYPE_NAME
          struct_specifier ::= * STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= * STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE

                          VOID shift  264
                         FLOAT shift  263
                           INT shift  262
                          BOOL shift  261
                          VEC2 shift  260
                          VEC3 shift  259
                          VEC4 shift  258
                         BVEC2 shift  257
                         BVEC3 shift  256
                         BVEC4 shift  255
                         IVEC2 shift  254
                         IVEC3 shift  253
                         IVEC4 shift  252
                          MAT2 shift  251
                          MAT3 shift  250
                          MAT4 shift  249
                     TYPE_NAME shift  245
                     SAMPLER2D shift  248
                   SAMPLERCUBE shift  247
                        STRUCT shift  87
        type_specifier_no_prec shift  133
              struct_specifier shift  246

State 67:
          struct_declaration ::= type_specifier * struct_declarator_list SEMICOLON
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  131
        struct_declarator_list shift  86
             struct_declarator shift  234

State 68:
     (48) multiplicative_expression ::= unary_expression *
          assignment_expression ::= unary_expression * assignment_operator assignment_expression
          assignment_operator ::= * EQUAL
          assignment_operator ::= * MUL_ASSIGN
          assignment_operator ::= * DIV_ASSIGN
          assignment_operator ::= * MOD_ASSIGN
          assignment_operator ::= * ADD_ASSIGN
          assignment_operator ::= * SUB_ASSIGN
          assignment_operator ::= * LEFT_ASSIGN
          assignment_operator ::= * RIGHT_ASSIGN
          assignment_operator ::= * AND_ASSIGN
          assignment_operator ::= * XOR_ASSIGN
          assignment_operator ::= * OR_ASSIGN

                         EQUAL shift  287
                    MUL_ASSIGN shift  286
                    DIV_ASSIGN shift  285
                    MOD_ASSIGN shift  284
                    ADD_ASSIGN shift  283
                    SUB_ASSIGN shift  282
                   LEFT_ASSIGN shift  281
                  RIGHT_ASSIGN shift  280
                    AND_ASSIGN shift  279
                    XOR_ASSIGN shift  278
                     OR_ASSIGN shift  277
           assignment_operator shift  30
                     {default} reduce 48

State 69:
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_declarator
          parameter_declaration ::= type_qualifier * parameter_qualifier parameter_type_specifier
    (111) parameter_qualifier ::= *
          parameter_qualifier ::= * IN
          parameter_qualifier ::= * OUT
          parameter_qualifier ::= * INOUT

                            IN shift  225
                           OUT shift  224
                         INOUT shift  223
           parameter_qualifier shift  57
                     {default} reduce 111

State 70:
          declaration ::= PRECISION * precision_qualifier type_specifier_no_prec SEMICOLON
          precision_qualifier ::= * HIGH_PRECISION
          precision_qualifier ::= * MEDIUM_PRECISION
          precision_qualifier ::= * LOW_PRECISION

                HIGH_PRECISION shift  242
              MEDIUM_PRECISION shift  241
                 LOW_PRECISION shift  240
           precision_qualifier shift  66

State 71:
          declaration ::= function_prototype * SEMICOLON
          compound_statement_no_new_scope ::= * LEFT_BRACE RIGHT_BRACE
          compound_statement_no_new_scope ::= * LEFT_BRACE statement_list RIGHT_BRACE
          function_definition ::= function_prototype * compound_statement_no_new_scope

                     SEMICOLON shift  334
                    LEFT_BRACE shift  2
compound_statement_no_new_scope shift  174

State 72:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * IDENTIFIER
          struct_declarator ::= * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  131
             struct_declarator shift  236

State 73:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (65) equality_expression ::= equality_expression NE_OP relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 65

State 74:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (64) equality_expression ::= equality_expression EQ_OP relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 64

State 75:
          relational_expression ::= relational_expression * LEFT_ANGLE shift_expression
          relational_expression ::= relational_expression * RIGHT_ANGLE shift_expression
          relational_expression ::= relational_expression * LE_OP shift_expression
          relational_expression ::= relational_expression * GE_OP shift_expression
     (63) equality_expression ::= relational_expression *

                    LEFT_ANGLE shift  45
                   RIGHT_ANGLE shift  44
                         LE_OP shift  43
                         GE_OP shift  42
                     {default} reduce 63

State 76:
          postfix_expression ::= postfix_expression * LEFT_BRACKET integer_expression RIGHT_BRACKET
          postfix_expression ::= postfix_expression * DOT FIELD_SELECTION
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
     (40) unary_expression ::= postfix_expression *

                  LEFT_BRACKET shift  13
                           DOT shift  153
                        INC_OP shift  274
                        DEC_OP shift  273
                     {default} reduce 40

State 77:
          function_header ::= fully_specified_type IDENTIFIER * LEFT_PAREN
    (122) single_declaration ::= fully_specified_type IDENTIFIER *
          single_declaration ::= fully_specified_type IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type IDENTIFIER * EQUAL initializer

                    LEFT_PAREN shift  214
                  LEFT_BRACKET shift  24
                         EQUAL shift  19
                     {default} reduce 122

State 78:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (54) additive_expression ::= additive_expression DASH multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 54

State 79:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (53) additive_expression ::= additive_expression PLUS multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 53

State 80:
          multiplicative_expression ::= multiplicative_expression * STAR unary_expression
          multiplicative_expression ::= multiplicative_expression * SLASH unary_expression
          multiplicative_expression ::= multiplicative_expression * PERCENT unary_expression
     (52) additive_expression ::= multiplicative_expression *

                          STAR shift  52
                         SLASH shift  51
                       PERCENT shift  50
                     {default} reduce 52

State 81:
          expression ::= expression * COMMA assignment_expression
          jump_statement ::= RETURN expression * SEMICOLON

                         COMMA shift  32
                     SEMICOLON shift  184

State 82:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression * RIGHT_PAREN SEMICOLON

                   RIGHT_PAREN shift  112
                         COMMA shift  32

State 83:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LEFT_PAREN expression * RIGHT_PAREN selection_rest_statement

                   RIGHT_PAREN shift  3
                         COMMA shift  32

State 84:
          single_declaration ::= INVARIANT * IDENTIFIER
          type_qualifier ::= INVARIANT * VARYING

                    IDENTIFIER shift  210
                       VARYING shift  217

State 85:
          parameter_declarator ::= type_specifier * IDENTIFIER
          parameter_declarator ::= type_specifier * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
    (115) parameter_type_specifier ::= type_specifier *
          parameter_type_specifier ::= type_specifier * LEFT_BRACKET constant_expression RIGHT_BRACKET

                    IDENTIFIER shift  128
                  LEFT_BRACKET shift  25
                     {default} reduce 115

State 86:
          struct_declaration ::= type_specifier struct_declarator_list * SEMICOLON
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                         COMMA shift  72
                     SEMICOLON shift  237

State 87:
          struct_specifier ::= STRUCT * IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
          struct_specifier ::= STRUCT * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    IDENTIFIER shift  132
                    LEFT_BRACE shift  58

State 88:
    (118) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER *
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER * EQUAL initializer

                  LEFT_BRACKET shift  28
                         EQUAL shift  20
                     {default} reduce 118

State 89:
          declaration ::= init_declarator_list * SEMICOLON
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list * COMMA IDENTIFIER EQUAL initializer

                         COMMA shift  135
                     SEMICOLON shift  270

State 90:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMICOLON

                         COMMA shift  32
                     SEMICOLON shift  271

State 91:
          conditional_expression ::= logical_or_expression QUESTION expression * COLON assignment_expression
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  32
                         COLON shift  29

State 92:
          logical_or_expression ::= logical_or_expression * OR_OP logical_xor_expression
     (78) conditional_expression ::= logical_or_expression *
          conditional_expression ::= logical_or_expression * QUESTION expression COLON assignment_expression

                         OR_OP shift  33
                      QUESTION shift  21
                     {default} reduce 78

State 93:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (67) and_expression ::= and_expression AMPERSAND equality_expression *

                         EQ_OP shift  41
                         NE_OP shift  40
                     {default} reduce 67

State 94:
          equality_expression ::= equality_expression * EQ_OP relational_expression
          equality_expression ::= equality_expression * NE_OP relational_expression
     (66) and_expression ::= equality_expression *

                         EQ_OP shift  41
                         NE_OP shift  40
                     {default} reduce 66

State 95:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (62) relational_expression ::= relational_expression GE_OP shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 62

State 96:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (61) relational_expression ::= relational_expression LE_OP shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 61

State 97:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (60) relational_expression ::= relational_expression RIGHT_ANGLE shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 60

State 98:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (59) relational_expression ::= relational_expression LEFT_ANGLE shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 59

State 99:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (57) shift_expression ::= shift_expression RIGHT_OP additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 57

State 100:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (56) shift_expression ::= shift_expression LEFT_OP additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 56

State 101:
          shift_expression ::= shift_expression * LEFT_OP additive_expression
          shift_expression ::= shift_expression * RIGHT_OP additive_expression
     (58) relational_expression ::= shift_expression *

                       LEFT_OP shift  47
                      RIGHT_OP shift  46
                     {default} reduce 58

State 102:
          additive_expression ::= additive_expression * PLUS multiplicative_expression
          additive_expression ::= additive_expression * DASH multiplicative_expression
     (55) shift_expression ::= additive_expression *

                          PLUS shift  49
                          DASH shift  48
                     {default} reduce 55

State 103:
          function_call_generic ::= function_call_header_with_parameters * RIGHT_PAREN
          function_call_header_with_parameters ::= function_call_header_with_parameters * COMMA assignment_expression

                   RIGHT_PAREN shift  324
                         COMMA shift  31

State 104:
          primary_expression ::= LEFT_PAREN expression * RIGHT_PAREN
          expression ::= expression * COMMA assignment_expression

                   RIGHT_PAREN shift  329
                         COMMA shift  32

State 105:
          expression ::= expression * COMMA assignment_expression
    (200) for_rest_statement ::= conditionopt SEMICOLON expression *

                         COMMA shift  32
                     {default} reduce 200

State 106:
          for_rest_statement ::= conditionopt * SEMICOLON
          for_rest_statement ::= conditionopt * SEMICOLON expression

                     SEMICOLON shift  15

State 107:
          jump_statement ::= DISCARD * SEMICOLON

                     SEMICOLON shift  182

State 108:
          jump_statement ::= BREAK * SEMICOLON

                     SEMICOLON shift  185

State 109:
          jump_statement ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  186

State 110:
          iteration_statement ::= FOR LEFT_PAREN for_init_statement for_rest_statement * RIGHT_PAREN statement_no_new_scope

                   RIGHT_PAREN shift  6

State 111:
          iteration_statement ::= FOR * LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope

                    LEFT_PAREN shift  10

State 112:
          iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN * SEMICOLON

                     SEMICOLON shift  188

State 113:
          iteration_statement ::= DO statement_with_scope WHILE * LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                    LEFT_PAREN shift  16

State 114:
          iteration_statement ::= DO statement_with_scope * WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON

                         WHILE shift  113

State 115:
          iteration_statement ::= WHILE LEFT_PAREN condition * RIGHT_PAREN statement_no_new_scope

                   RIGHT_PAREN shift  8

State 116:
          condition ::= fully_specified_type IDENTIFIER * EQUAL initializer

                         EQUAL shift  17

State 117:
          condition ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  116

State 118:
          expression ::= expression * COMMA assignment_expression
    (190) condition ::= expression *

                         COMMA shift  32
                     {default} reduce 190

State 119:
          iteration_statement ::= WHILE * LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope

                    LEFT_PAREN shift  12

State 120:
          selection_rest_statement ::= statement_with_scope * ELSE statement_with_scope
    (189) selection_rest_statement ::= statement_with_scope *

                          ELSE shift  9
                          ELSE reduce 189 ** Parsing conflict **
                     {default} reduce 189

State 121:
          selection_statement ::= IF * LEFT_PAREN expression RIGHT_PAREN selection_rest_statement

                    LEFT_PAREN shift  18

State 122:
          single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  213

State 123:
          function_header ::= fully_specified_type * IDENTIFIER LEFT_PAREN
    (121) single_declaration ::= fully_specified_type *
          single_declaration ::= fully_specified_type * IDENTIFIER
          single_declaration ::= fully_specified_type * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          single_declaration ::= fully_specified_type * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  77
                     {default} reduce 121

State 124:
    (101) function_declarator ::= function_header_with_parameters *
          function_header_with_parameters ::= function_header_with_parameters * COMMA parameter_declaration

                         COMMA shift  64
                     {default} reduce 101

State 125:
          type_qualifier ::= INVARIANT * VARYING

                       VARYING shift  217

State 126:
          parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  228

State 127:
          parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  229

State 128:
    (105) parameter_declarator ::= type_specifier IDENTIFIER *
          parameter_declarator ::= type_specifier IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  26
                     {default} reduce 105

State 129:
          function_prototype ::= function_declarator * RIGHT_PAREN

                   RIGHT_PAREN shift  231

State 130:
          struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  235

State 131:
    (165) struct_declarator ::= IDENTIFIER *
          struct_declarator ::= IDENTIFIER * LEFT_BRACKET constant_expression RIGHT_BRACKET

                  LEFT_BRACKET shift  27
                     {default} reduce 165

State 132:
          struct_specifier ::= STRUCT IDENTIFIER * LEFT_BRACE struct_declaration_list RIGHT_BRACE

                    LEFT_BRACE shift  59

State 133:
          declaration ::= PRECISION precision_qualifier type_specifier_no_prec * SEMICOLON

                     SEMICOLON shift  265

State 134:
          init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  268

State 135:
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
          init_declarator_list ::= init_declarator_list COMMA * IDENTIFIER EQUAL initializer

                    IDENTIFIER shift  88

State 136:
          declaration ::= function_prototype * SEMICOLON

                     SEMICOLON shift  334

State 137:
     (39) constructor_identifier ::= TYPE_NAME *
    (154) type_specifier_no_prec ::= TYPE_NAME *

                    LEFT_PAREN reduce 39
                     {default} reduce 154

State 138:
     (38) constructor_identifier ::= MAT4 *
    (150) type_specifier_no_prec ::= MAT4 *

                    LEFT_PAREN reduce 38
                     {default} reduce 150

State 139:
     (37) constructor_identifier ::= MAT3 *
    (149) type_specifier_no_prec ::= MAT3 *

                    LEFT_PAREN reduce 37
                     {default} reduce 149

State 140:
     (36) constructor_identifier ::= MAT2 *
    (148) type_specifier_no_prec ::= MAT2 *

                    LEFT_PAREN reduce 36
                     {default} reduce 148

State 141:
     (35) constructor_identifier ::= IVEC4 *
    (147) type_specifier_no_prec ::= IVEC4 *

                    LEFT_PAREN reduce 35
                     {default} reduce 147

State 142:
     (34) constructor_identifier ::= IVEC3 *
    (146) type_specifier_no_prec ::= IVEC3 *

                    LEFT_PAREN reduce 34
                     {default} reduce 146

State 143:
     (33) constructor_identifier ::= IVEC2 *
    (145) type_specifier_no_prec ::= IVEC2 *

                    LEFT_PAREN reduce 33
                     {default} reduce 145

State 144:
     (32) constructor_identifier ::= BVEC4 *
    (144) type_specifier_no_prec ::= BVEC4 *

                    LEFT_PAREN reduce 32
                     {default} reduce 144

State 145:
     (31) constructor_identifier ::= BVEC3 *
    (143) type_specifier_no_prec ::= BVEC3 *

                    LEFT_PAREN reduce 31
                     {default} reduce 143

State 146:
     (30) constructor_identifier ::= BVEC2 *
    (142) type_specifier_no_prec ::= BVEC2 *

                    LEFT_PAREN reduce 30
                     {default} reduce 142

State 147:
     (29) constructor_identifier ::= VEC4 *
    (141) type_specifier_no_prec ::= VEC4 *

                    LEFT_PAREN reduce 29
                     {default} reduce 141

State 148:
     (28) constructor_identifier ::= VEC3 *
    (140) type_specifier_no_prec ::= VEC3 *

                    LEFT_PAREN reduce 28
                     {default} reduce 140

State 149:
     (27) constructor_identifier ::= VEC2 *
    (139) type_specifier_no_prec ::= VEC2 *

                    LEFT_PAREN reduce 27
                     {default} reduce 139

State 150:
     (26) constructor_identifier ::= BOOL *
    (138) type_specifier_no_prec ::= BOOL *

                    LEFT_PAREN reduce 26
                     {default} reduce 138

State 151:
     (25) constructor_identifier ::= INT *
    (137) type_specifier_no_prec ::= INT *

                    LEFT_PAREN reduce 25
                     {default} reduce 137

State 152:
     (24) constructor_identifier ::= FLOAT *
    (136) type_specifier_no_prec ::= FLOAT *

                    LEFT_PAREN reduce 24
                     {default} reduce 136

State 153:
          postfix_expression ::= postfix_expression DOT * FIELD_SELECTION

               FIELD_SELECTION shift  275

State 154:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (77) logical_or_expression ::= logical_or_expression OR_OP logical_xor_expression *

                        XOR_OP shift  34
                     {default} reduce 77

State 155:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (75) logical_xor_expression ::= logical_xor_expression XOR_OP logical_and_expression *

                        AND_OP shift  35
                     {default} reduce 75

State 156:
          logical_xor_expression ::= logical_xor_expression * XOR_OP logical_and_expression
     (76) logical_or_expression ::= logical_xor_expression *

                        XOR_OP shift  34
                     {default} reduce 76

State 157:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (73) logical_and_expression ::= logical_and_expression AND_OP inclusive_or_expression *

                  VERTICAL_BAR shift  36
                     {default} reduce 73

State 158:
          logical_and_expression ::= logical_and_expression * AND_OP inclusive_or_expression
     (74) logical_xor_expression ::= logical_and_expression *

                        AND_OP shift  35
                     {default} reduce 74

State 159:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (71) inclusive_or_expression ::= inclusive_or_expression VERTICAL_BAR exclusive_or_expression *

                         CARET shift  37
                     {default} reduce 71

State 160:
          inclusive_or_expression ::= inclusive_or_expression * VERTICAL_BAR exclusive_or_expression
     (72) logical_and_expression ::= inclusive_or_expression *

                  VERTICAL_BAR shift  36
                     {default} reduce 72

State 161:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (69) exclusive_or_expression ::= exclusive_or_expression CARET and_expression *

                     AMPERSAND shift  38
                     {default} reduce 69

State 162:
          exclusive_or_expression ::= exclusive_or_expression * CARET and_expression
     (70) inclusive_or_expression ::= exclusive_or_expression *

                         CARET shift  37
                     {default} reduce 70

State 163:
          and_expression ::= and_expression * AMPERSAND equality_expression
     (68) exclusive_or_expression ::= and_expression *

                     AMPERSAND shift  38
                     {default} reduce 68

State 164:
          function_call_header ::= function_identifier * LEFT_PAREN

                    LEFT_PAREN shift  320

State 165:
          function_call_generic ::= function_call_header_no_parameters * RIGHT_PAREN

                   RIGHT_PAREN shift  323

State 166:
     (13) integer_expression ::= expression *
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  32
                     {default} reduce 13

State 167:
          postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression * RIGHT_BRACKET

                 RIGHT_BRACKET shift  327

State 168:
      (1) variable_identifier ::= IDENTIFIER *
     (23) function_identifier ::= IDENTIFIER *

                    LEFT_PAREN reduce 23
                     {default} reduce 1

State 169:
    (206) translation_unit ::= external_declaration *

                     {default} reduce 206

State 170:
    (210) external_declaration ::= preprocessor_directive *

                     {default} reduce 210

State 171:
    (209) external_declaration ::= declaration *

                     {default} reduce 209

State 172:
    (208) external_declaration ::= function_definition *

                     {default} reduce 208

State 173:
    (207) translation_unit ::= translation_unit external_declaration *

                     {default} reduce 207

State 174:
    (211) function_definition ::= function_prototype compound_statement_no_new_scope *

                     {default} reduce 211

State 175:
    (182) compound_statement_no_new_scope ::= LEFT_BRACE statement_list RIGHT_BRACE *

                     {default} reduce 182

State 176:
    (181) compound_statement_no_new_scope ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 181

State 177:
    (183) statement_list ::= statement_no_new_scope *

                     {default} reduce 183

State 178:
    (196) for_init_statement ::= declaration_statement *

                     {default} reduce 196

State 179:
    (195) for_init_statement ::= expression_statement *

                     {default} reduce 195

State 180:
    (197) conditionopt ::= condition *

                     {default} reduce 197

State 181:
    (212) preprocessor_directive ::= PREPROCESSOR_DIRECTIVE *

                     {default} reduce 212

State 182:
    (205) jump_statement ::= DISCARD SEMICOLON *

                     {default} reduce 205

State 183:
    (203) jump_statement ::= RETURN SEMICOLON *

                     {default} reduce 203

State 184:
    (204) jump_statement ::= RETURN expression SEMICOLON *

                     {default} reduce 204

State 185:
    (202) jump_statement ::= BREAK SEMICOLON *

                     {default} reduce 202

State 186:
    (201) jump_statement ::= CONTINUE SEMICOLON *

                     {default} reduce 201

State 187:
    (194) iteration_statement ::= FOR LEFT_PAREN for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope *

                     {default} reduce 194

State 188:
    (193) iteration_statement ::= DO statement_with_scope WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON *

                     {default} reduce 193

State 189:
    (192) iteration_statement ::= WHILE LEFT_PAREN condition RIGHT_PAREN statement_no_new_scope *

                     {default} reduce 192

State 190:
    (191) condition ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 191

State 191:
    (188) selection_rest_statement ::= statement_with_scope ELSE statement_with_scope *

                     {default} reduce 188

State 192:
    (187) selection_statement ::= IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement *

                     {default} reduce 187

State 193:
    (180) statement_with_scope ::= simple_statement *

                     {default} reduce 180

State 194:
    (179) statement_with_scope ::= compound_statement_no_new_scope *

                     {default} reduce 179

State 195:
    (185) expression_statement ::= SEMICOLON *

                     {default} reduce 185

State 196:
    (184) statement_list ::= statement_list statement_no_new_scope *

                     {default} reduce 184

State 197:
    (178) compound_statement_with_scope ::= LEFT_BRACE statement_list RIGHT_BRACE *

                     {default} reduce 178

State 198:
    (177) compound_statement_with_scope ::= LEFT_BRACE RIGHT_BRACE *

                     {default} reduce 177

State 199:
    (176) simple_statement ::= preprocessor_directive *

                     {default} reduce 176

State 200:
    (175) simple_statement ::= jump_statement *

                     {default} reduce 175

State 201:
    (174) simple_statement ::= iteration_statement *

                     {default} reduce 174

State 202:
    (173) simple_statement ::= selection_statement *

                     {default} reduce 173

State 203:
    (172) simple_statement ::= expression_statement *

                     {default} reduce 172

State 204:
    (171) simple_statement ::= declaration_statement *

                     {default} reduce 171

State 205:
    (170) statement_no_new_scope ::= simple_statement *

                     {default} reduce 170

State 206:
    (169) statement_no_new_scope ::= compound_statement_with_scope *

                     {default} reduce 169

State 207:
    (168) declaration_statement ::= declaration *

                     {default} reduce 168

State 208:
    (127) fully_specified_type ::= type_qualifier type_specifier *

                     {default} reduce 127

State 209:
    (126) fully_specified_type ::= type_specifier *

                     {default} reduce 126

State 210:
    (125) single_declaration ::= INVARIANT IDENTIFIER *

                     {default} reduce 125

State 211:
    (117) init_declarator_list ::= single_declaration *

                     {default} reduce 117

State 212:
    (124) single_declaration ::= fully_specified_type IDENTIFIER EQUAL initializer *

                     {default} reduce 124

State 213:
    (123) single_declaration ::= fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 123

State 214:
    (104) function_header ::= fully_specified_type IDENTIFIER LEFT_PAREN *

                     {default} reduce 104

State 215:
    (103) function_header_with_parameters ::= function_header_with_parameters COMMA parameter_declaration *

                     {default} reduce 103

State 216:
    (132) type_qualifier ::= UNIFORM *

                     {default} reduce 132

State 217:
    (131) type_qualifier ::= INVARIANT VARYING *

                     {default} reduce 131

State 218:
    (130) type_qualifier ::= VARYING *

                     {default} reduce 130

State 219:
    (129) type_qualifier ::= ATTRIBUTE *

                     {default} reduce 129

State 220:
    (128) type_qualifier ::= CONST *

                     {default} reduce 128

State 221:
    (110) parameter_declaration ::= parameter_qualifier parameter_type_specifier *

                     {default} reduce 110

State 222:
    (108) parameter_declaration ::= parameter_qualifier parameter_declarator *

                     {default} reduce 108

State 223:
    (114) parameter_qualifier ::= INOUT *

                     {default} reduce 114

State 224:
    (113) parameter_qualifier ::= OUT *

                     {default} reduce 113

State 225:
    (112) parameter_qualifier ::= IN *

                     {default} reduce 112

State 226:
    (109) parameter_declaration ::= type_qualifier parameter_qualifier parameter_type_specifier *

                     {default} reduce 109

State 227:
    (107) parameter_declaration ::= type_qualifier parameter_qualifier parameter_declarator *

                     {default} reduce 107

State 228:
    (116) parameter_type_specifier ::= type_specifier LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 116

State 229:
    (106) parameter_declarator ::= type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 106

State 230:
    (102) function_header_with_parameters ::= function_header parameter_declaration *

                     {default} reduce 102

State 231:
     (99) function_prototype ::= function_declarator RIGHT_PAREN *

                     {default} reduce 99

State 232:
    (159) struct_specifier ::= STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 159

State 233:
    (160) struct_declaration_list ::= struct_declaration *

                     {default} reduce 160

State 234:
    (163) struct_declarator_list ::= struct_declarator *

                     {default} reduce 163

State 235:
    (166) struct_declarator ::= IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 166

State 236:
    (164) struct_declarator_list ::= struct_declarator_list COMMA struct_declarator *

                     {default} reduce 164

State 237:
    (162) struct_declaration ::= type_specifier struct_declarator_list SEMICOLON *

                     {default} reduce 162

State 238:
    (161) struct_declaration_list ::= struct_declaration_list struct_declaration *

                     {default} reduce 161

State 239:
    (158) struct_specifier ::= STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE *

                     {default} reduce 158

State 240:
    (157) precision_qualifier ::= LOW_PRECISION *

                     {default} reduce 157

State 241:
    (156) precision_qualifier ::= MEDIUM_PRECISION *

                     {default} reduce 156

State 242:
    (155) precision_qualifier ::= HIGH_PRECISION *

                     {default} reduce 155

State 243:
    (134) type_specifier ::= precision_qualifier type_specifier_no_prec *

                     {default} reduce 134

State 244:
    (133) type_specifier ::= type_specifier_no_prec *

                     {default} reduce 133

State 245:
    (154) type_specifier_no_prec ::= TYPE_NAME *

                     {default} reduce 154

State 246:
    (153) type_specifier_no_prec ::= struct_specifier *

                     {default} reduce 153

State 247:
    (152) type_specifier_no_prec ::= SAMPLERCUBE *

                     {default} reduce 152

State 248:
    (151) type_specifier_no_prec ::= SAMPLER2D *

                     {default} reduce 151

State 249:
    (150) type_specifier_no_prec ::= MAT4 *

                     {default} reduce 150

State 250:
    (149) type_specifier_no_prec ::= MAT3 *

                     {default} reduce 149

State 251:
    (148) type_specifier_no_prec ::= MAT2 *

                     {default} reduce 148

State 252:
    (147) type_specifier_no_prec ::= IVEC4 *

                     {default} reduce 147

State 253:
    (146) type_specifier_no_prec ::= IVEC3 *

                     {default} reduce 146

State 254:
    (145) type_specifier_no_prec ::= IVEC2 *

                     {default} reduce 145

State 255:
    (144) type_specifier_no_prec ::= BVEC4 *

                     {default} reduce 144

State 256:
    (143) type_specifier_no_prec ::= BVEC3 *

                     {default} reduce 143

State 257:
    (142) type_specifier_no_prec ::= BVEC2 *

                     {default} reduce 142

State 258:
    (141) type_specifier_no_prec ::= VEC4 *

                     {default} reduce 141

State 259:
    (140) type_specifier_no_prec ::= VEC3 *

                     {default} reduce 140

State 260:
    (139) type_specifier_no_prec ::= VEC2 *

                     {default} reduce 139

State 261:
    (138) type_specifier_no_prec ::= BOOL *

                     {default} reduce 138

State 262:
    (137) type_specifier_no_prec ::= INT *

                     {default} reduce 137

State 263:
    (136) type_specifier_no_prec ::= FLOAT *

                     {default} reduce 136

State 264:
    (135) type_specifier_no_prec ::= VOID *

                     {default} reduce 135

State 265:
     (98) declaration ::= PRECISION precision_qualifier type_specifier_no_prec SEMICOLON *

                     {default} reduce 98

State 266:
    (167) initializer ::= assignment_expression *

                     {default} reduce 167

State 267:
    (120) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER EQUAL initializer *

                     {default} reduce 120

State 268:
    (119) init_declarator_list ::= init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET *

                     {default} reduce 119

State 269:
     (95) constant_expression ::= conditional_expression *

                     {default} reduce 95

State 270:
     (97) declaration ::= init_declarator_list SEMICOLON *

                     {default} reduce 97

State 271:
    (186) expression_statement ::= expression SEMICOLON *

                     {default} reduce 186

State 272:
     (94) expression ::= expression COMMA assignment_expression *

                     {default} reduce 94

State 273:
     (12) postfix_expression ::= postfix_expression DEC_OP *

                     {default} reduce 12

State 274:
     (11) postfix_expression ::= postfix_expression INC_OP *

                     {default} reduce 11

State 275:
     (10) postfix_expression ::= postfix_expression DOT FIELD_SELECTION *

                     {default} reduce 10

State 276:
     (20) function_call_header_with_parameters ::= function_call_header_with_parameters COMMA assignment_expression *

                     {default} reduce 20

State 277:
     (92) assignment_operator ::= OR_ASSIGN *

                     {default} reduce 92

State 278:
     (91) assignment_operator ::= XOR_ASSIGN *

                     {default} reduce 91

State 279:
     (90) assignment_operator ::= AND_ASSIGN *

                     {default} reduce 90

State 280:
     (89) assignment_operator ::= RIGHT_ASSIGN *

                     {default} reduce 89

State 281:
     (88) assignment_operator ::= LEFT_ASSIGN *

                     {default} reduce 88

State 282:
     (87) assignment_operator ::= SUB_ASSIGN *

                     {default} reduce 87

State 283:
     (86) assignment_operator ::= ADD_ASSIGN *

                     {default} reduce 86

State 284:
     (85) assignment_operator ::= MOD_ASSIGN *

                     {default} reduce 85

State 285:
     (84) assignment_operator ::= DIV_ASSIGN *

                     {default} reduce 84

State 286:
     (83) assignment_operator ::= MUL_ASSIGN *

                     {default} reduce 83

State 287:
     (82) assignment_operator ::= EQUAL *

                     {default} reduce 82

State 288:
     (81) assignment_expression ::= unary_expression assignment_operator assignment_expression *

                     {default} reduce 81

State 289:
     (93) expression ::= assignment_expression *

                     {default} reduce 93

State 290:
     (80) assignment_expression ::= conditional_expression *

                     {default} reduce 80

State 291:
     (79) conditional_expression ::= logical_or_expression QUESTION expression COLON assignment_expression *

                     {default} reduce 79

State 292:
     (48) multiplicative_expression ::= unary_expression *

                     {default} reduce 48

State 293:
     (51) multiplicative_expression ::= multiplicative_expression PERCENT unary_expression *

                     {default} reduce 51

State 294:
     (50) multiplicative_expression ::= multiplicative_expression SLASH unary_expression *

                     {default} reduce 50

State 295:
     (49) multiplicative_expression ::= multiplicative_expression STAR unary_expression *

                     {default} reduce 49

State 296:
     (47) unary_operator ::= TILDE *

                     {default} reduce 47

State 297:
     (46) unary_operator ::= BANG *

                     {default} reduce 46

State 298:
     (45) unary_operator ::= DASH *

                     {default} reduce 45

State 299:
     (44) unary_operator ::= PLUS *

                     {default} reduce 44

State 300:
     (43) unary_expression ::= unary_operator unary_expression *

                     {default} reduce 43

State 301:
     (42) unary_expression ::= DEC_OP unary_expression *

                     {default} reduce 42

State 302:
     (41) unary_expression ::= INC_OP unary_expression *

                     {default} reduce 41

State 303:
     (39) constructor_identifier ::= TYPE_NAME *

                     {default} reduce 39

State 304:
     (38) constructor_identifier ::= MAT4 *

                     {default} reduce 38

State 305:
     (37) constructor_identifier ::= MAT3 *

                     {default} reduce 37

State 306:
     (36) constructor_identifier ::= MAT2 *

                     {default} reduce 36

State 307:
     (35) constructor_identifier ::= IVEC4 *

                     {default} reduce 35

State 308:
     (34) constructor_identifier ::= IVEC3 *

                     {default} reduce 34

State 309:
     (33) constructor_identifier ::= IVEC2 *

                     {default} reduce 33

State 310:
     (32) constructor_identifier ::= BVEC4 *

                     {default} reduce 32

State 311:
     (31) constructor_identifier ::= BVEC3 *

                     {default} reduce 31

State 312:
     (30) constructor_identifier ::= BVEC2 *

                     {default} reduce 30

State 313:
     (29) constructor_identifier ::= VEC4 *

                     {default} reduce 29

State 314:
     (28) constructor_identifier ::= VEC3 *

                     {default} reduce 28

State 315:
     (27) constructor_identifier ::= VEC2 *

                     {default} reduce 27

State 316:
     (26) constructor_identifier ::= BOOL *

                     {default} reduce 26

State 317:
     (25) constructor_identifier ::= INT *

                     {default} reduce 25

State 318:
     (24) constructor_identifier ::= FLOAT *

                     {default} reduce 24

State 319:
     (22) function_identifier ::= constructor_identifier *

                     {default} reduce 22

State 320:
     (21) function_call_header ::= function_identifier LEFT_PAREN *

                     {default} reduce 21

State 321:
     (19) function_call_header_with_parameters ::= function_call_header assignment_expression *

                     {default} reduce 19

State 322:
     (17) function_call_header_no_parameters ::= function_call_header VOID *

                     {default} reduce 17

State 323:
     (16) function_call_generic ::= function_call_header_no_parameters RIGHT_PAREN *

                     {default} reduce 16

State 324:
     (15) function_call_generic ::= function_call_header_with_parameters RIGHT_PAREN *

                     {default} reduce 15

State 325:
     (14) function_call ::= function_call_generic *

                     {default} reduce 14

State 326:
      (9) postfix_expression ::= function_call *

                     {default} reduce 9

State 327:
      (8) postfix_expression ::= postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET *

                     {default} reduce 8

State 328:
      (7) postfix_expression ::= primary_expression *

                     {default} reduce 7

State 329:
      (6) primary_expression ::= LEFT_PAREN expression RIGHT_PAREN *

                     {default} reduce 6

State 330:
      (5) primary_expression ::= BOOLCONSTANT *

                     {default} reduce 5

State 331:
      (4) primary_expression ::= FLOATCONSTANT *

                     {default} reduce 4

State 332:
      (3) primary_expression ::= INTCONSTANT *

                     {default} reduce 3

State 333:
      (2) primary_expression ::= variable_identifier *

                     {default} reduce 2

State 334:
     (96) declaration ::= function_prototype SEMICOLON *

                     {default} reduce 96

----------------------------------------------------
Symbols:
    0: $:
    1: IDENTIFIER
    2: INTCONSTANT
    3: FLOATCONSTANT
    4: BOOLCONSTANT
    5: LEFT_PAREN
    6: RIGHT_PAREN
    7: LEFT_BRACKET
    8: RIGHT_BRACKET
    9: DOT
   10: FIELD_SELECTION
   11: INC_OP
   12: DEC_OP
   13: VOID
   14: COMMA
   15: FLOAT
   16: INT
   17: BOOL
   18: VEC2
   19: VEC3
   20: VEC4
   21: BVEC2
   22: BVEC3
   23: BVEC4
   24: IVEC2
   25: IVEC3
   26: IVEC4
   27: MAT2
   28: MAT3
   29: MAT4
   30: TYPE_NAME
   31: PLUS
   32: DASH
   33: BANG
   34: TILDE
   35: STAR
   36: SLASH
   37: PERCENT
   38: LEFT_OP
   39: RIGHT_OP
   40: LEFT_ANGLE
   41: RIGHT_ANGLE
   42: LE_OP
   43: GE_OP
   44: EQ_OP
   45: NE_OP
   46: AMPERSAND
   47: CARET
   48: VERTICAL_BAR
   49: AND_OP
   50: XOR_OP
   51: OR_OP
   52: QUESTION
   53: COLON
   54: EQUAL
   55: MUL_ASSIGN
   56: DIV_ASSIGN
   57: MOD_ASSIGN
   58: ADD_ASSIGN
   59: SUB_ASSIGN
   60: LEFT_ASSIGN
   61: RIGHT_ASSIGN
   62: AND_ASSIGN
   63: XOR_ASSIGN
   64: OR_ASSIGN
   65: SEMICOLON
   66: PRECISION
   67: IN
   68: OUT
   69: INOUT
   70: INVARIANT
   71: CONST
   72: ATTRIBUTE
   73: VARYING
   74: UNIFORM
   75: SAMPLER2D
   76: SAMPLERCUBE
   77: HIGH_PRECISION
   78: MEDIUM_PRECISION
   79: LOW_PRECISION
   80: STRUCT
   81: LEFT_BRACE
   82: RIGHT_BRACE
   83: IF
   84: ELSE
   85: WHILE
   86: DO
   87: FOR
   88: CONTINUE
   89: BREAK
   90: RETURN
   91: DISCARD
   92: PREPROCESSOR_DIRECTIVE
   93: error:
   94: root: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   95: translation_unit: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
   96: variable_identifier: IDENTIFIER
   97: primary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN
   98: expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
   99: postfix_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  100: integer_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  101: function_call: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  102: function_call_generic: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  103: function_call_header_with_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  104: function_call_header_no_parameters: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  105: function_call_header: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  106: assignment_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  107: function_identifier: IDENTIFIER FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  108: constructor_identifier: FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME
  109: unary_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  110: unary_operator: PLUS DASH BANG TILDE
  111: multiplicative_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  112: additive_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  113: shift_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  114: relational_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  115: equality_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  116: and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  117: exclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  118: inclusive_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  119: logical_and_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  120: logical_xor_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  121: logical_or_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  122: conditional_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  123: assignment_operator: EQUAL MUL_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
  124: constant_expression: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  125: declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  126: function_prototype: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  127: init_declarator_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  128: precision_qualifier: HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION
  129: type_specifier_no_prec: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE STRUCT
  130: function_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  131: function_header: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  132: function_header_with_parameters: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  133: parameter_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME IN OUT INOUT INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  134: fully_specified_type: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  135: parameter_declarator: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  136: type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  137: type_qualifier: INVARIANT CONST ATTRIBUTE VARYING UNIFORM
  138: parameter_qualifier: <lambda> IN OUT INOUT
  139: parameter_type_specifier: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  140: single_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  141: initializer: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE
  142: struct_specifier: STRUCT
  143: struct_declaration_list: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  144: struct_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  145: struct_declarator_list: IDENTIFIER
  146: struct_declarator: IDENTIFIER
  147: declaration_statement: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  148: statement_no_new_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  149: compound_statement_with_scope: LEFT_BRACE
  150: simple_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  151: expression_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON
  152: selection_statement: IF
  153: iteration_statement: WHILE DO FOR
  154: jump_statement: CONTINUE BREAK RETURN DISCARD
  155: preprocessor_directive: PREPROCESSOR_DIRECTIVE
  156: statement_list: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  157: statement_with_scope: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  158: compound_statement_no_new_scope: LEFT_BRACE
  159: selection_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT LEFT_BRACE IF WHILE DO FOR CONTINUE BREAK RETURN DISCARD PREPROCESSOR_DIRECTIVE
  160: condition: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  161: for_init_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  162: for_rest_statement: IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE SEMICOLON INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  163: conditionopt: <lambda> IDENTIFIER INTCONSTANT FLOATCONSTANT BOOLCONSTANT LEFT_PAREN INC_OP DEC_OP VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PLUS DASH BANG TILDE INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
  164: external_declaration: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME PRECISION INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT PREPROCESSOR_DIRECTIVE
  165: function_definition: VOID FLOAT INT BOOL VEC2 VEC3 VEC4 BVEC2 BVEC3 BVEC4 IVEC2 IVEC3 IVEC4 MAT2 MAT3 MAT4 TYPE_NAME INVARIANT CONST ATTRIBUTE VARYING UNIFORM SAMPLER2D SAMPLERCUBE HIGH_PRECISION MEDIUM_PRECISION LOW_PRECISION STRUCT
